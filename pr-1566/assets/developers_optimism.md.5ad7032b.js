import{c as n}from"./chunks/constants.dc70dfe7.js";import{o as t,c as p,k as s,t as e,l,a,Q as o}from"./chunks/framework.86842dc0.js";const c=o(`<h1 id="run-an-op-stack-devnet-posting-celestia" tabindex="-1">Run an OP Stack devnet posting Celestia <a class="header-anchor" href="#run-an-op-stack-devnet-posting-celestia" aria-label="Permalink to &quot;Run an OP Stack devnet posting Celestia&quot;">​</a></h1><p>This guide will show you how to run your own OP Stack devnet locally that posts to a Celestia network.</p><p>If you&#39;d like to use a Rollups as a Service (RaaS) provider, you can visit the RaaS category in the menu.</p><h2 id="dependency-setup" tabindex="-1">Dependency setup <a class="header-anchor" href="#dependency-setup" aria-label="Permalink to &quot;Dependency setup&quot;">​</a></h2><h3 id="environment-setup" tabindex="-1">Environment setup <a class="header-anchor" href="#environment-setup" aria-label="Permalink to &quot;Environment setup&quot;">​</a></h3><p>First, <a href="./../nodes/environment">install dependencies for Celestia software</a> and for <a href="https://community.optimism.io/docs/developers/build/dev-node/" target="_blank" rel="noreferrer">OP Stack</a>.</p><h3 id="clone-repository" tabindex="-1">Clone repository <a class="header-anchor" href="#clone-repository" aria-label="Permalink to &quot;Clone repository&quot;">​</a></h3><p>Next, clone the repo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/celestiaorg/optimism</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">optimism</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/celestiaorg/optimism</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">optimism</span></span></code></pre></div><p>Check out to the version for either the <a href="https://github.com/celestiaorg/optimism/releases" target="_blank" rel="noreferrer">stable version</a> or <a href="https://github.com/celestiaorg/optimism/tree/celestia-develop" target="_blank" rel="noreferrer">upstream version</a>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-MDay_" id="tab-7PMwJ20" checked="checked"><label for="tab-7PMwJ20">v1.2.0-OP_op-node/v1.7.5-CN_v0.13.2</label><input type="radio" name="group-MDay_" id="tab-EvM94hL"><label for="tab-EvM94hL">celestia-develop</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tags/v1.2.0-OP_op-node/v1.7.5-CN_v0.13.2</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tags/v1.2.0-OP_op-node/v1.7.5-CN_v0.13.2</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-develop</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-develop</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span></code></pre></div></div></div><h2 id="build-devnet" tabindex="-1">Build devnet <a class="header-anchor" href="#build-devnet" aria-label="Permalink to &quot;Build devnet&quot;">​</a></h2><p>Build TypeScript definitions for TS dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span></span></code></pre></div><p>Set environment variables to start network:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> SEQUENCER_BATCH_INBOX_ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0xff00000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> L2OO_ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0x70997970C51812dc3A010C7d01b50e0d17dc79C8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> SEQUENCER_BATCH_INBOX_ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0xff00000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> L2OO_ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0x70997970C51812dc3A010C7d01b50e0d17dc79C8</span></span></code></pre></div><h2 id="setting-up-your-light-node" tabindex="-1">Setting up your light node <a class="header-anchor" href="#setting-up-your-light-node" aria-label="Permalink to &quot;Setting up your light node&quot;">​</a></h2><p>In order to allow your light node to post and retrieve data without errors, you will need to change <code>UseShareExchange</code> to <code>false</code> in:</p>`,18),r={class:"vp-code-group vp-adaptive-theme"},i=o('<div class="tabs"><input type="radio" name="group-lRJCR" id="tab-rAhvXhR" checked="checked"><label for="tab-rAhvXhR">Mainnet Beta</label><input type="radio" name="group-lRJCR" id="tab-rMzWsgY"><label for="tab-rMzWsgY">Mocha</label><input type="radio" name="group-lRJCR" id="tab-mGOgFHe"><label for="tab-mGOgFHe">Arabica</label></div>',1),d={class:"blocks"},_=o('<div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$HOME/.celestia-light/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$HOME/.celestia-light/config.toml</span></span></code></pre></div>',1),E={class:"language-bash vp-adaptive-theme"},y=s("button",{title:"Copy Code",class:"copy"},null,-1),h=s("span",{class:"lang"},"bash",-1),u={class:"shiki github-dark vp-code-dark"},b={class:"line"},C={style:{color:"#E1E4E8"}},F={class:"shiki github-light vp-code-light"},g={class:"line"},f={style:{color:"#24292E"}},T={class:"language-bash vp-adaptive-theme"},A=s("button",{title:"Copy Code",class:"copy"},null,-1),m=s("span",{class:"lang"},"bash",-1),v={class:"shiki github-dark vp-code-dark"},k={class:"line"},S={style:{color:"#E1E4E8"}},q={class:"shiki github-light vp-code-light"},B={class:"line"},P={style:{color:"#24292E"}},D=o('<p>If you choose to use your own node store, the light node must be <strong>fully synced</strong> and <strong>funded</strong> for you to be able to submit and retrieve <code>PayForBlobs</code> to a Celestia network. Visit the <a href="./../nodes/arabica-devnet">Arabica</a> or <a href="./../nodes/mocha-testnet">Mocha</a> pages to visit their faucets. If it is not synced, you will run into <a href="https://github.com/celestiaorg/celestia-node/issues/2151/" target="_blank" rel="noreferrer">errors similar to this</a>.</p><p>In order to mount existing data, you must have a node store that is in the default directory:</p>',2),I={class:"vp-code-group vp-adaptive-theme"},V=o('<div class="tabs"><input type="radio" name="group-7999e" id="tab-PCuFpNt" checked="checked"><label for="tab-PCuFpNt">Mainnet Beta</label><input type="radio" name="group-7999e" id="tab-RbeT3ZA"><label for="tab-RbeT3ZA">Mocha</label><input type="radio" name="group-7999e" id="tab-dA6a-z7"><label for="tab-dA6a-z7">Arabica</label></div>',1),x={class:"blocks"},N=o('<div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$HOME/.celestia-light</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$HOME/.celestia-light</span></span></code></pre></div>',1),R={class:"language-bash vp-adaptive-theme"},w=s("button",{title:"Copy Code",class:"copy"},null,-1),O=s("span",{class:"lang"},"bash",-1),H={class:"shiki github-dark vp-code-dark"},M={class:"line"},U={style:{color:"#E1E4E8"}},L={class:"shiki github-light vp-code-light"},$={class:"line"},G={style:{color:"#24292E"}},Y={class:"language-bash vp-adaptive-theme"},K=s("button",{title:"Copy Code",class:"copy"},null,-1),j=s("span",{class:"lang"},"bash",-1),Q={class:"shiki github-dark vp-code-dark"},J={class:"line"},X={style:{color:"#E1E4E8"}},z={class:"shiki github-light vp-code-light"},W={class:"line"},Z={style:{color:"#24292E"}},ss=o('<p>By default, the node will run with the account named <code>my_celes_key</code>. If you have your own setup you&#39;d like to try, you can always edit <code>optimism/ops-bedrock/docker-compose.yml</code> to work with your setup.</p><h3 id="docker-changes" tabindex="-1">Docker changes <a class="header-anchor" href="#docker-changes" aria-label="Permalink to &quot;Docker changes&quot;">​</a></h3><p>You will need to modify the <code>da:</code> section of your <code>$HOME/optimism/ops-bedrock/docker-compose.yml</code> for your specific use, similarly to the example below. This setup will use <code>celestia-node</code> with a DA server on port 26658.</p><p>For the <code>P2P_NETWORK</code> variable, you&#39;ll need to supply the network of choice, either <code>celestia</code>, <code>mocha</code>, or <code>arabica</code>. Using <code>celestia</code>, the volume path will be just <code>.celestia-light</code> instead of <code>.celestia-light-&lt;network&gt;</code>. You will also need to provide a <code>--core.ip &lt;RPC_URL&gt;</code> for the network you are using.</p>',4),as={class:"vp-code-group vp-adaptive-theme"},os=o('<div class="tabs"><input type="radio" name="group-SmKh5" id="tab-slZhmXJ" checked="checked"><label for="tab-slZhmXJ">Mainnet Beta</label><input type="radio" name="group-SmKh5" id="tab-o4772C6"><label for="tab-o4772C6">Mocha testnet</label><input type="radio" name="group-SmKh5" id="tab-azU8JkS"><label for="tab-azU8JkS">Arabica devnet</label></div>',1),ns={class:"blocks"},es={class:"language-yaml vp-adaptive-theme active"},ls=s("button",{title:"Copy Code",class:"copy"},null,-1),ts=s("span",{class:"lang"},"yaml",-1),ps={class:"shiki github-dark has-diff vp-code-dark"},cs=s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"da"),s("span",{style:{color:"#E1E4E8"}},":")],-1),rs=o('<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#E1E4E8;"> </span></span>',1),is=o('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#E1E4E8;"> </span></span>',1),ds={class:"line diff add"},_s=s("span",{style:{color:"#E1E4E8"}},"  ",-1),Es=s("span",{style:{color:"#85E89D"}},"command",-1),ys=s("span",{style:{color:"#E1E4E8"}},": ",-1),hs={style:{color:"#9ECBFF"}},us=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"ports"),s("span",{style:{color:"#E1E4E8"}},":")],-1),bs=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26658:26658"')],-1),Cs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26659:26659"'),s("span",{style:{color:"#E1E4E8"}}," ")],-1),Fs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"volumes"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),gs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},"$HOME/.celestia-light/:/home/celestia/.celestia-light/"),s("span",{style:{color:"#E1E4E8"}}," ")],-1),fs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"environment"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Ts=o('<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">NODE_TYPE</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;"> </span></span>',1),As={class:"line diff add"},ms=s("span",{style:{color:"#E1E4E8"}},"    ",-1),vs=s("span",{style:{color:"#85E89D"}},"P2P_NETWORK",-1),ks=s("span",{style:{color:"#E1E4E8"}},": ",-1),Ss={style:{color:"#9ECBFF"}},qs=s("span",{style:{color:"#E1E4E8"}}," ",-1),Bs=o('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">user</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span></span>',1),Ps=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"healthcheck"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Ds=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">test</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;CMD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;curl&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-f&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#E1E4E8;">]</span></span>',1),Is=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>',1),Vs=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">timeout</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5s</span></span>',1),xs=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">retries</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>',1),Ns=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">start_period</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30s</span></span>',1),Rs={class:"shiki github-light has-diff vp-code-light"},ws=s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"da"),s("span",{style:{color:"#24292E"}},":")],-1),Os=o('<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#24292E;"> </span></span>',1),Hs=o('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#24292E;"> </span></span>',1),Ms={class:"line diff add"},Us=s("span",{style:{color:"#24292E"}},"  ",-1),Ls=s("span",{style:{color:"#22863A"}},"command",-1),$s=s("span",{style:{color:"#24292E"}},": ",-1),Gs={style:{color:"#032F62"}},Ys=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"ports"),s("span",{style:{color:"#24292E"}},":")],-1),Ks=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26658:26658"')],-1),js=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26659:26659"'),s("span",{style:{color:"#24292E"}}," ")],-1),Qs=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"volumes"),s("span",{style:{color:"#24292E"}},": ")],-1),Js=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},"$HOME/.celestia-light/:/home/celestia/.celestia-light/"),s("span",{style:{color:"#24292E"}}," ")],-1),Xs=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"environment"),s("span",{style:{color:"#24292E"}},": ")],-1),zs=o('<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#22863A;">NODE_TYPE</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;"> </span></span>',1),Ws={class:"line diff add"},Zs=s("span",{style:{color:"#24292E"}},"    ",-1),sa=s("span",{style:{color:"#22863A"}},"P2P_NETWORK",-1),aa=s("span",{style:{color:"#24292E"}},": ",-1),oa={style:{color:"#032F62"}},na=s("span",{style:{color:"#24292E"}}," ",-1),ea=o('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">user</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span></span>',1),la=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"healthcheck"),s("span",{style:{color:"#24292E"}},":")],-1),ta=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">test</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;CMD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;curl&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-f&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#24292E;">]</span></span>',1),pa=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>',1),ca=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">timeout</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5s</span></span>',1),ra=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">retries</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>',1),ia=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">start_period</span><span style="color:#24292E;">: </span><span style="color:#032F62;">30s</span></span>',1),da={class:"language-yaml vp-adaptive-theme"},_a=s("button",{title:"Copy Code",class:"copy"},null,-1),Ea=s("span",{class:"lang"},"yaml",-1),ya={class:"shiki github-dark has-diff vp-code-dark"},ha=s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"da"),s("span",{style:{color:"#E1E4E8"}},":")],-1),ua=o('<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#E1E4E8;"> </span></span>',1),ba=o('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#E1E4E8;"> </span></span>',1),Ca={class:"line diff add"},Fa=s("span",{style:{color:"#E1E4E8"}},"  ",-1),ga=s("span",{style:{color:"#85E89D"}},"command",-1),fa=s("span",{style:{color:"#E1E4E8"}},": ",-1),Ta={style:{color:"#9ECBFF"}},Aa=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"ports"),s("span",{style:{color:"#E1E4E8"}},":")],-1),ma=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26658:26658"')],-1),va=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26659:26659"'),s("span",{style:{color:"#E1E4E8"}}," ")],-1),ka=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"volumes"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Sa={class:"line diff add"},qa=s("span",{style:{color:"#E1E4E8"}},"    - ",-1),Ba={style:{color:"#9ECBFF"}},Pa=s("span",{style:{color:"#E1E4E8"}}," ",-1),Da=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"environment"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Ia=o('<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">NODE_TYPE</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;"> </span></span>',1),Va={class:"line diff add"},xa=s("span",{style:{color:"#E1E4E8"}},"    ",-1),Na=s("span",{style:{color:"#85E89D"}},"P2P_NETWORK",-1),Ra=s("span",{style:{color:"#E1E4E8"}},": ",-1),wa={style:{color:"#9ECBFF"}},Oa=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ha=o('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">user</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span></span>',1),Ma=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"healthcheck"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Ua=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">test</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;CMD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;curl&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-f&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#E1E4E8;">]</span></span>',1),La=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>',1),$a=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">timeout</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5s</span></span>',1),Ga=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">retries</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>',1),Ya=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">start_period</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30s</span></span>',1),Ka={class:"shiki github-light has-diff vp-code-light"},ja=s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"da"),s("span",{style:{color:"#24292E"}},":")],-1),Qa=o('<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#24292E;"> </span></span>',1),Ja=o('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#24292E;"> </span></span>',1),Xa={class:"line diff add"},za=s("span",{style:{color:"#24292E"}},"  ",-1),Wa=s("span",{style:{color:"#22863A"}},"command",-1),Za=s("span",{style:{color:"#24292E"}},": ",-1),so={style:{color:"#032F62"}},ao=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"ports"),s("span",{style:{color:"#24292E"}},":")],-1),oo=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26658:26658"')],-1),no=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26659:26659"'),s("span",{style:{color:"#24292E"}}," ")],-1),eo=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"volumes"),s("span",{style:{color:"#24292E"}},": ")],-1),lo={class:"line diff add"},to=s("span",{style:{color:"#24292E"}},"    - ",-1),po={style:{color:"#032F62"}},co=s("span",{style:{color:"#24292E"}}," ",-1),ro=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"environment"),s("span",{style:{color:"#24292E"}},": ")],-1),io=o('<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#22863A;">NODE_TYPE</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;"> </span></span>',1),_o={class:"line diff add"},Eo=s("span",{style:{color:"#24292E"}},"    ",-1),yo=s("span",{style:{color:"#22863A"}},"P2P_NETWORK",-1),ho=s("span",{style:{color:"#24292E"}},": ",-1),uo={style:{color:"#032F62"}},bo=s("span",{style:{color:"#24292E"}}," ",-1),Co=o('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">user</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span></span>',1),Fo=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"healthcheck"),s("span",{style:{color:"#24292E"}},":")],-1),go=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">test</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;CMD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;curl&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-f&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#24292E;">]</span></span>',1),fo=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>',1),To=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">timeout</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5s</span></span>',1),Ao=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">retries</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>',1),mo=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">start_period</span><span style="color:#24292E;">: </span><span style="color:#032F62;">30s</span></span>',1),vo={class:"language-yaml vp-adaptive-theme"},ko=s("button",{title:"Copy Code",class:"copy"},null,-1),So=s("span",{class:"lang"},"yaml",-1),qo={class:"shiki github-dark has-diff vp-code-dark"},Bo=s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"da"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Po=o('<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#E1E4E8;"> </span></span>',1),Do=o('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#E1E4E8;"> </span></span>',1),Io={class:"line diff add"},Vo=s("span",{style:{color:"#E1E4E8"}},"  ",-1),xo=s("span",{style:{color:"#85E89D"}},"command",-1),No=s("span",{style:{color:"#E1E4E8"}},": ",-1),Ro={style:{color:"#9ECBFF"}},wo=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"ports"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Oo=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26658:26658"')],-1),Ho=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26659:26659"'),s("span",{style:{color:"#E1E4E8"}}," ")],-1),Mo=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"volumes"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Uo={class:"line diff add"},Lo=s("span",{style:{color:"#E1E4E8"}},"    - ",-1),$o={style:{color:"#9ECBFF"}},Go=s("span",{style:{color:"#E1E4E8"}}," ",-1),Yo=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"environment"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Ko=o('<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">NODE_TYPE</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;"> </span></span>',1),jo={class:"line diff add"},Qo=s("span",{style:{color:"#E1E4E8"}},"    ",-1),Jo=s("span",{style:{color:"#85E89D"}},"P2P_NETWORK",-1),Xo=s("span",{style:{color:"#E1E4E8"}},": ",-1),zo={style:{color:"#9ECBFF"}},Wo=s("span",{style:{color:"#E1E4E8"}}," ",-1),Zo=o('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">user</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span></span>',1),sn=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"healthcheck"),s("span",{style:{color:"#E1E4E8"}},":")],-1),an=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">test</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;CMD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;curl&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-f&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#E1E4E8;">]</span></span>',1),on=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>',1),nn=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">timeout</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5s</span></span>',1),en=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">retries</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>',1),ln=o('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">start_period</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30s</span></span>',1),tn={class:"shiki github-light has-diff vp-code-light"},pn=s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"da"),s("span",{style:{color:"#24292E"}},":")],-1),cn=o('<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#24292E;"> </span></span>',1),rn=o('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#24292E;"> </span></span>',1),dn={class:"line diff add"},_n=s("span",{style:{color:"#24292E"}},"  ",-1),En=s("span",{style:{color:"#22863A"}},"command",-1),yn=s("span",{style:{color:"#24292E"}},": ",-1),hn={style:{color:"#032F62"}},un=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"ports"),s("span",{style:{color:"#24292E"}},":")],-1),bn=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26658:26658"')],-1),Cn=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26659:26659"'),s("span",{style:{color:"#24292E"}}," ")],-1),Fn=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"volumes"),s("span",{style:{color:"#24292E"}},": ")],-1),gn={class:"line diff add"},fn=s("span",{style:{color:"#24292E"}},"    - ",-1),Tn={style:{color:"#032F62"}},An=s("span",{style:{color:"#24292E"}}," ",-1),mn=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"environment"),s("span",{style:{color:"#24292E"}},": ")],-1),vn=o('<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#22863A;">NODE_TYPE</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;"> </span></span>',1),kn={class:"line diff add"},Sn=s("span",{style:{color:"#24292E"}},"    ",-1),qn=s("span",{style:{color:"#22863A"}},"P2P_NETWORK",-1),Bn=s("span",{style:{color:"#24292E"}},": ",-1),Pn={style:{color:"#032F62"}},Dn=s("span",{style:{color:"#24292E"}}," ",-1),In=o('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">user</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span></span>',1),Vn=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"healthcheck"),s("span",{style:{color:"#24292E"}},":")],-1),xn=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">test</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;CMD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;curl&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-f&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#24292E;">]</span></span>',1),Nn=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>',1),Rn=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">timeout</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5s</span></span>',1),wn=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">retries</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>',1),On=o('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">start_period</span><span style="color:#24292E;">: </span><span style="color:#032F62;">30s</span></span>',1),Hn=o(`<h3 id="set-your-celestia-node-auth-token" tabindex="-1">Set your Celestia node auth token <a class="header-anchor" href="#set-your-celestia-node-auth-token" aria-label="Permalink to &quot;Set your Celestia node auth token&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-onk6u" id="tab-eZYmsOk" checked="checked"><label for="tab-eZYmsOk">Mainnet Beta</label><input type="radio" name="group-onk6u" id="tab-Ur2R8JU"><label for="tab-Ur2R8JU">Mocha testnet</label><input type="radio" name="group-onk6u" id="tab-dE4WPRn"><label for="tab-dE4WPRn">Arabica devnet</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">celestia</span><span style="color:#9ECBFF;"> light auth admin)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">celestia</span><span style="color:#032F62;"> light auth admin)</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">celestia</span><span style="color:#9ECBFF;"> light auth admin </span><span style="color:#79B8FF;">--p2p.network</span><span style="color:#9ECBFF;"> mocha)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">celestia</span><span style="color:#032F62;"> light auth admin </span><span style="color:#005CC5;">--p2p.network</span><span style="color:#032F62;"> mocha)</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">celestia</span><span style="color:#9ECBFF;"> light auth admin </span><span style="color:#79B8FF;">--p2p.network</span><span style="color:#9ECBFF;"> arabica)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">celestia</span><span style="color:#032F62;"> light auth admin </span><span style="color:#005CC5;">--p2p.network</span><span style="color:#032F62;"> arabica)</span></span></code></pre></div></div></div><p>Now you&#39;re ready to start your devnet.</p><h2 id="start-devnet" tabindex="-1">Start devnet <a class="header-anchor" href="#start-devnet" aria-label="Permalink to &quot;Start devnet&quot;">​</a></h2><p>Start the network by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-up</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-up</span></span></code></pre></div><p>This starts up the layer 1 (ETH), layer 2 (<code>op-geth</code>), data availability layer (Celestia), the sequencer (<code>op-node</code>), batch submitter (<code>op-batcher</code>), state commitment service (<code>op-proposer</code>).</p><h3 id="view-the-logs-of-the-devnet" tabindex="-1">View the logs of the devnet <a class="header-anchor" href="#view-the-logs-of-the-devnet" aria-label="Permalink to &quot;View the logs of the devnet&quot;">​</a></h3><p>If you&#39;d like to view the logs of the devnet, run the following command from the root of the Optimism directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-logs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-logs</span></span></code></pre></div><h3 id="optional-stop-devnet" tabindex="-1">Optional: Stop devnet <a class="header-anchor" href="#optional-stop-devnet" aria-label="Permalink to &quot;Optional: Stop devnet&quot;">​</a></h3><p>If you&#39;d like to start the network over, use the following command to safely shut down all of the containers:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-down</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-down</span></span></code></pre></div><p>Then clean out the old config:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-clean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-clean</span></span></code></pre></div><h2 id="deploying-to-an-l1-or-l2" tabindex="-1">Deploying to an L1 (or L2) <a class="header-anchor" href="#deploying-to-an-l1-or-l2" aria-label="Permalink to &quot;Deploying to an L1 (or L2)&quot;">​</a></h2><p>If you&#39;d like to deploy to an EVM L1 or L2, reference the <a href="https://community.optimism.io/docs/developers/bedrock/node-operator-guide/" target="_blank" rel="noreferrer">OP stack deployment guide</a>.</p><h2 id="find-a-transaction" tabindex="-1">Find a transaction <a class="header-anchor" href="#find-a-transaction" aria-label="Permalink to &quot;Find a transaction&quot;">​</a></h2><p>Now, we&#39;ll check for a recent transaction on the L1 with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cast</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">latest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rpc-url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8545</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cast</span><span style="color:#24292E;"> </span><span style="color:#032F62;">block</span><span style="color:#24292E;"> </span><span style="color:#032F62;">latest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rpc-url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8545</span></span></code></pre></div><p>Output of a block that contains a transaction will look like this:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">baseFeePerGas        7</span></span>
<span class="line"><span style="color:#79B8FF;">difficulty           2</span></span>
<span class="line"><span style="color:#79B8FF;">extraData            0xd883010d04846765746888676f312e32312e33856c696e7578000000000000006b3afa42dce1f87f1f07a1ef569c4d43e41738ef93c865098bfa1458645f384e2e4498bcfe4ad9353ff1913a2e16162f496fafe5b0939a6c78fb5b503248d6da01</span></span>
<span class="line"><span style="color:#79B8FF;">gasLimit             30000000</span></span>
<span class="line"><span style="color:#79B8FF;">gasUsed              21568</span></span>
<span class="line"><span style="color:#79B8FF;">hash                 0x1cb54d2369752ef73511c202ff9cdfd0eadf3a77b7aef0092bea63f2b5d57659</span></span>
<span class="line"><span style="color:#79B8FF;">logsBloom            0xspan></span>
<span class="line"><span style="color:#79B8FF;">miner                0x0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">mixHash              0x0000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">nonce                0x0000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">number               1141</span></span>
<span class="line"><span style="color:#79B8FF;">parentHash           0x664bf4bb4a57dd5768a0a98991d77c58fb7a4e164c2581c79fb33ce9c3d4c250</span></span>
<span class="line"><span style="color:#79B8FF;">receiptsRoot         0xaf8ff6af1180c8be9e4e8f3a5f882b3b227233f4abbefa479836d3721682a389</span></span>
<span class="line"><span style="color:#79B8FF;">sealFields           []</span></span>
<span class="line"><span style="color:#79B8FF;">sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347</span></span>
<span class="line"><span style="color:#79B8FF;">size                 767</span></span>
<span class="line"><span style="color:#79B8FF;">stateRoot            0xd4b998a35d20d98ed3488221f0c161a0a9572d3de66399482553c8e3d2fae751</span></span>
<span class="line"><span style="color:#79B8FF;">timestamp            1699638350</span></span>
<span class="line"><span style="color:#79B8FF;">withdrawalsRoot</span></span>
<span class="line"><span style="color:#79B8FF;">totalDifficulty      2283</span></span>
<span class="line"><span style="color:#79B8FF;">transactions:        [</span></span>
<span class="line"><span style="color:#79B8FF;">  0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span>
<span class="line"><span style="color:#79B8FF;">]</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#005CC5;">baseFeePerGas        7</span></span>
<span class="line"><span style="color:#005CC5;">difficulty           2</span></span>
<span class="line"><span style="color:#005CC5;">extraData            0xd883010d04846765746888676f312e32312e33856c696e7578000000000000006b3afa42dce1f87f1f07a1ef569c4d43e41738ef93c865098bfa1458645f384e2e4498bcfe4ad9353ff1913a2e16162f496fafe5b0939a6c78fb5b503248d6da01</span></span>
<span class="line"><span style="color:#005CC5;">gasLimit             30000000</span></span>
<span class="line"><span style="color:#005CC5;">gasUsed              21568</span></span>
<span class="line"><span style="color:#005CC5;">hash                 0x1cb54d2369752ef73511c202ff9cdfd0eadf3a77b7aef0092bea63f2b5d57659</span></span>
<span class="line"><span style="color:#005CC5;">logsBloom            0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">miner                0x0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">mixHash              0x0000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">nonce                0x0000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">number               1141</span></span>
<span class="line"><span style="color:#005CC5;">parentHash           0x664bf4bb4a57dd5768a0a98991d77c58fb7a4e164c2581c79fb33ce9c3d4c250</span></span>
<span class="line"><span style="color:#005CC5;">receiptsRoot         0xaf8ff6af1180c8be9e4e8f3a5f882b3b227233f4abbefa479836d3721682a389</span></span>
<span class="line"><span style="color:#005CC5;">sealFields           []</span></span>
<span class="line"><span style="color:#005CC5;">sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347</span></span>
<span class="line"><span style="color:#005CC5;">size                 767</span></span>
<span class="line"><span style="color:#005CC5;">stateRoot            0xd4b998a35d20d98ed3488221f0c161a0a9572d3de66399482553c8e3d2fae751</span></span>
<span class="line"><span style="color:#005CC5;">timestamp            1699638350</span></span>
<span class="line"><span style="color:#005CC5;">withdrawalsRoot</span></span>
<span class="line"><span style="color:#005CC5;">totalDifficulty      2283</span></span>
<span class="line"><span style="color:#005CC5;">transactions:        [</span></span>
<span class="line"><span style="color:#005CC5;">  0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span>
<span class="line"><span style="color:#005CC5;">]</span></span></code></pre></div><p>Copy the transaction hash from <code>transactions: &lt;transaction-hash&gt;</code> and set it as a variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> TX_HASH</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> TX_HASH</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span></code></pre></div><h2 id="read-the-transaction-call-data" tabindex="-1">Read the transaction call data <a class="header-anchor" href="#read-the-transaction-call-data" aria-label="Permalink to &quot;Read the transaction call data&quot;">​</a></h2><p>Now read the transaction call data on the L1:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cast</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tx</span><span style="color:#E1E4E8;"> $TX_HASH </span><span style="color:#79B8FF;">--rpc-url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8545</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cast</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tx</span><span style="color:#24292E;"> $TX_HASH </span><span style="color:#005CC5;">--rpc-url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8545</span></span></code></pre></div><p>The output will look similar to below:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">blockHash            0x9f4dfae061b5ddd86f95a81be5daa0d7fe32e7f7f770f86dc375e0007d249bd2</span></span>
<span class="line"><span style="color:#79B8FF;">blockNumber          24</span></span>
<span class="line"><span style="color:#79B8FF;">from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC</span></span>
<span class="line"><span style="color:#79B8FF;">gas                  21572</span></span>
<span class="line"><span style="color:#79B8FF;">gasPrice             1040676758</span></span>
<span class="line"><span style="color:#79B8FF;">hash                 0xadd3a5dc0b8c605aeac891098e87cbaff43bb642896ebbf74f964c0690e46df2</span></span>
<span class="line"><span style="color:#79B8FF;">input                0xce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#79B8FF;">nonce                4</span></span>
<span class="line"><span style="color:#79B8FF;">r                    0xaf5c1505c7dfcebca94d9a6a8c0caf99b6c87a8ed6d6c0b3161c9026f270a84f</span></span>
<span class="line"><span style="color:#79B8FF;">s                    0x383ed2debf9f9055920cd7340418dda7e2bca6b989eb6992d83d123d4e322f2a</span></span>
<span class="line"><span style="color:#79B8FF;">to                   0xFf00000000000000000000000000000000000901</span></span>
<span class="line"><span style="color:#79B8FF;">transactionIndex     0</span></span>
<span class="line"><span style="color:#79B8FF;">v                    0</span></span>
<span class="line"><span style="color:#79B8FF;">value                0</span></span>
<span class="line"><span style="color:#79B8FF;">yParity              0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">blockHash            0x9f4dfae061b5ddd86f95a81be5daa0d7fe32e7f7f770f86dc375e0007d249bd2</span></span>
<span class="line"><span style="color:#005CC5;">blockNumber          24</span></span>
<span class="line"><span style="color:#005CC5;">from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC</span></span>
<span class="line"><span style="color:#005CC5;">gas                  21572</span></span>
<span class="line"><span style="color:#005CC5;">gasPrice             1040676758</span></span>
<span class="line"><span style="color:#005CC5;">hash                 0xadd3a5dc0b8c605aeac891098e87cbaff43bb642896ebbf74f964c0690e46df2</span></span>
<span class="line"><span style="color:#005CC5;">input                0xce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#005CC5;">nonce                4</span></span>
<span class="line"><span style="color:#005CC5;">r                    0xaf5c1505c7dfcebca94d9a6a8c0caf99b6c87a8ed6d6c0b3161c9026f270a84f</span></span>
<span class="line"><span style="color:#005CC5;">s                    0x383ed2debf9f9055920cd7340418dda7e2bca6b989eb6992d83d123d4e322f2a</span></span>
<span class="line"><span style="color:#005CC5;">to                   0xFf00000000000000000000000000000000000901</span></span>
<span class="line"><span style="color:#005CC5;">transactionIndex     0</span></span>
<span class="line"><span style="color:#005CC5;">v                    0</span></span>
<span class="line"><span style="color:#005CC5;">value                0</span></span>
<span class="line"><span style="color:#005CC5;">yParity              0</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You are looking for a batcher transaction to the address <code>0xFf00000000000000000000000000000000000901</code>.</p></div><p>First, remove the prefix <code>0xce</code>. Now, set the <code>input</code> as the <code>INPUT</code> variable and encode it as base64:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> INPUT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3500000000000000769074</span><span style="color:#9ECBFF;">a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> ENCODED_INPUT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#79B8FF;">echo</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#E1E4E8;">$INPUT</span><span style="color:#9ECBFF;">&quot; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">xxd</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">base64</span><span style="color:#9ECBFF;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> INPUT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3500000000000000769074</span><span style="color:#032F62;">a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> ENCODED_INPUT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#005CC5;">echo</span><span style="color:#032F62;"> &quot;</span><span style="color:#24292E;">$INPUT</span><span style="color:#032F62;">&quot; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">xxd</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-r</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-p</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">base64</span><span style="color:#032F62;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Remember to remove the <code>0xce</code> prefix!</p></div><h2 id="find-the-data-on-celestia" tabindex="-1">Find the data on Celestia <a class="header-anchor" href="#find-the-data-on-celestia" aria-label="Permalink to &quot;Find the data on Celestia&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">POST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Authorization: Bearer </span><span style="color:#E1E4E8;">$CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{ &quot;id&quot;: 1, &quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;da.Get&quot;, &quot;params&quot;: [[&quot;3wAAAAAAAABmGvJUORYLqY8wVdjgp6/0oSh6brQqG3ZGr/cfUMuElg==&quot;], &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAECAwQFBgcICRA=&quot;]}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://127.0.0.1:26658</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">POST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Authorization: Bearer </span><span style="color:#24292E;">$CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{ &quot;id&quot;: 1, &quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;da.Get&quot;, &quot;params&quot;: [[&quot;3wAAAAAAAABmGvJUORYLqY8wVdjgp6/0oSh6brQqG3ZGr/cfUMuElg==&quot;], &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAECAwQFBgcICRA=&quot;]}&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://127.0.0.1:26658</span></span></code></pre></div><p>Your result will look similar to the below!</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:[&quot;SGVsbG8gd28ybGQh&quot;],&quot;id&quot;:1}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:[&quot;SGVsbG8gd28ybGQh&quot;],&quot;id&quot;:1}</span></span></code></pre></div><h2 id="ethereum-fallback-mechanism-in-op-stack" tabindex="-1">Ethereum fallback mechanism in OP Stack <a class="header-anchor" href="#ethereum-fallback-mechanism-in-op-stack" aria-label="Permalink to &quot;Ethereum fallback mechanism in OP Stack&quot;">​</a></h2><p>The <a href="./ethereum-fallback">Ethereum fallback mechanism</a> allows rollups to &quot;fall back&quot; to Ethereum or another EVM chain in the case of downtime or errors submitting data to Celestia.</p><h3 id="implementation-of-fallback" tabindex="-1">Implementation of fallback <a class="header-anchor" href="#implementation-of-fallback" aria-label="Permalink to &quot;Implementation of fallback&quot;">​</a></h3><p>The Ethereum fallback mechanism is implemented in the <a href="https://github.com/celestiaorg/optimism/tree/release-v1.1.0" target="_blank" rel="noreferrer">celestiaorg/optimism</a> v1.1.0 release.</p><p>The <code>op-batcher/batcher/driver.go</code> and <code>op-node/rollup/derive/calldata_source.go</code> files are part of the Ethereum fallback mechanism in the <code>op-batcher</code> and <code>op-node</code> respectively.</p><p>In <a href="https://github.com/celestiaorg/optimism/blob/release-v1.1.0/op-batcher/batcher/driver.go#L405-L419" target="_blank" rel="noreferrer"><code>driver.go</code>, the <code>calldataTxCandidate</code> function is responsible for the write path</a> of the Ethereum fallback. This function creates and submits a transaction to the batch inbox address with the given data. It uses the underlying <code>txmgr</code> to handle transaction sending and gas price management.</p><p>If the transaction data can be published as a blob to Celestia, it replaces the calldata with a blob identifier and sends the transaction with this data. If it cannot be published to Celestia, it falls back to Ethereum without any change to the transaction.</p><p>The blob identifier starts with the special prefix <code>0xce</code>, which was chosen as a mnemonic for Celestia, and indicates that the remaining data has to interpreted as a little-endian encoded Block Height (8 bytes) and Blob Commitment (32 bytes). The combination of these can later be used to retrieve the original calldata from Celestia.</p><table><thead><tr><th>Prefix</th><th>8 bytes</th><th>32 bytes</th></tr></thead><tbody><tr><td>0xce</td><td>Block Height</td><td>Blob Commitment</td></tr></tbody></table><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> (l </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">BatchSubmitter) </span><span style="color:#B392F0;">sendTransaction</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    txdata txData,</span></span>
<span class="line"><span style="color:#E1E4E8;">    queue </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">txmgr.Queue[txData],</span></span>
<span class="line"><span style="color:#E1E4E8;">    receiptsCh </span><span style="color:#F97583;">chan</span><span style="color:#E1E4E8;"> txmgr.TxReceipt[txData],</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> (l </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">BatchSubmitter) </span><span style="color:#6F42C1;">sendTransaction</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    txdata txData,</span></span>
<span class="line"><span style="color:#24292E;">    queue </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">txmgr.Queue[txData],</span></span>
<span class="line"><span style="color:#24292E;">    receiptsCh </span><span style="color:#D73A49;">chan</span><span style="color:#24292E;"> txmgr.TxReceipt[txData],</span></span>
<span class="line"><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>In <code>calldata_source.go</code>, <a href="https://github.com/celestiaorg/optimism/blob/release-v1.1.0/op-node/rollup/derive/calldata_source.go#L102-L139" target="_blank" rel="noreferrer">the <code>DataFromEVMTransactions</code> function defines the read path</a> of the Ethereum fallback. This function filters all of the transactions and returns the calldata from transactions that are sent to the batch inbox address from the batch sender address.</p><p>If the calldata matches the version prefix <code>0xce</code>, it is decoded as a blob identifier, the original calldata is retrieved from Celestia and returned for derivation. If the calldata does not match the prefix, the entire calldata is returned for derivation.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataFromEVMTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    config </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">rollup.Config,</span></span>
<span class="line"><span style="color:#E1E4E8;">    batcherAddr common.Address,</span></span>
<span class="line"><span style="color:#E1E4E8;">    txs types.Transactions,</span></span>
<span class="line"><span style="color:#E1E4E8;">    log log.Logger</span></span>
<span class="line"><span style="color:#E1E4E8;">) ([]eth.Data, </span><span style="color:#F97583;">error</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataFromEVMTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    config </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">rollup.Config,</span></span>
<span class="line"><span style="color:#24292E;">    batcherAddr common.Address,</span></span>
<span class="line"><span style="color:#24292E;">    txs types.Transactions,</span></span>
<span class="line"><span style="color:#24292E;">    log log.Logger</span></span>
<span class="line"><span style="color:#24292E;">) ([]eth.Data, </span><span style="color:#D73A49;">error</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>These two functions work together to ensure that the Ethereum fallback mechanism operates correctly, allowing the rollup to continue functioning even during periods of downtime on Celestia.</p><h3 id="testing-the-fallback" tabindex="-1">Testing the fallback <a class="header-anchor" href="#testing-the-fallback" aria-label="Permalink to &quot;Testing the fallback&quot;">​</a></h3><p>Testing out the Ethereum fallback mechanism can be done with the <code>go-da</code> tool. Triggering a simultaneous blob transaction will cause the <code>op-batcher</code> blob transaction to fail, with an <code>incorrect account sequence</code> error, which triggers a fallback to Ethereum.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">POST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Authorization: Bearer </span><span style="color:#E1E4E8;">$CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{ &quot;id&quot;: 1, &quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;da.Submit&quot;, &quot;params&quot;: [[&quot;SGVsbG8gd28ybGQh&quot;], -1, &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAECAwQFBgcICRA=&quot;]}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://127.0.0.1:26658</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">POST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Authorization: Bearer </span><span style="color:#24292E;">$CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{ &quot;id&quot;: 1, &quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;da.Submit&quot;, &quot;params&quot;: [[&quot;SGVsbG8gd28ybGQh&quot;], -1, &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAECAwQFBgcICRA=&quot;]}&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://127.0.0.1:26658</span></span></code></pre></div><p>Which should return:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#B392F0;">&quot;jsonrpc&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#B392F0;">&quot;2.0&quot;</span><span style="color:#B392F0;">,</span><span style="color:#B392F0;">&quot;result&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">&quot;9QEAAAAAAABmGvJUORYLqY8wVdjgp6/0oSh6brQqG3ZGr/cfUMuElg==&quot;</span><span style="color:#B392F0;">],</span><span style="color:#B392F0;">&quot;id&quot;</span><span style="color:#B392F0;">:1}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#6F42C1;">&quot;jsonrpc&quot;</span><span style="color:#005CC5;">:</span><span style="color:#6F42C1;">&quot;2.0&quot;</span><span style="color:#6F42C1;">,</span><span style="color:#6F42C1;">&quot;result&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;">[</span><span style="color:#6F42C1;">&quot;9QEAAAAAAABmGvJUORYLqY8wVdjgp6/0oSh6brQqG3ZGr/cfUMuElg==&quot;</span><span style="color:#6F42C1;">],</span><span style="color:#6F42C1;">&quot;id&quot;</span><span style="color:#6F42C1;">:1}</span></span></code></pre></div><p>Alternatively, you can shut off the light node and see that the OP Stack devnet logs show that the rollup has fallen back to the L1, in this case Ethereum, for posting data.</p><h2 id="span-batches" tabindex="-1">Span batches <a class="header-anchor" href="#span-batches" aria-label="Permalink to &quot;Span batches&quot;">​</a></h2><p>Span batches can be enabled by setting <code>OP_BATCHER_BATCH_TYPE: 1</code> in your <code>docker-compose.yml</code> file.</p><p>Note that this requires the Delta activation time to be configured. For your devnet, you should set <code>&quot;l2GenesisDeltaTimeOffset&quot;: &quot;0x0&quot;,</code> in <code>devnetL1-template.json</code>. This will enable span batches and can be tested by grepping <code>docker compose logs -f | grep batch_type</code> which should include <code>batch_type=SpanBatch</code> and <code>batch_type=1</code>.</p>`,60),Kn=JSON.parse('{"title":"Run an OP Stack devnet posting Celestia","description":"Start your own devnet with a modified version of optimism-bedrock.","frontmatter":{"description":"Start your own devnet with a modified version of optimism-bedrock.","next":{"text":"Ethereum fallback mechanism","link":"/developers/ethereum-fallback"},"head":[["meta",{"name":"og:title","content":"Run an OP Stack devnet posting Celestia | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/optimism.md","filePath":"developers/optimism.md","lastUpdated":1715293526000}'),Mn={name:"developers/optimism.md"},jn=Object.assign(Mn,{setup(Un){return(Ln,$n)=>(t(),p("div",null,[c,s("div",r,[i,s("div",d,[_,s("div",E,[y,h,s("pre",u,[s("code",null,[s("span",b,[s("span",C,"$HOME/.celestia-light-"+e(l(n).mochaChainId)+"/config.toml",1)])])]),s("pre",F,[s("code",null,[s("span",g,[s("span",f,"$HOME/.celestia-light-"+e(l(n).mochaChainId)+"/config.toml",1)])])])]),s("div",T,[A,m,s("pre",v,[s("code",null,[s("span",k,[s("span",S,"$HOME/.celestia-light-"+e(l(n).arabicaChainId)+"/config.toml",1)])])]),s("pre",q,[s("code",null,[s("span",B,[s("span",P,"$HOME/.celestia-light-"+e(l(n).arabicaChainId)+"/config.toml",1)])])])])])]),D,s("div",I,[V,s("div",x,[N,s("div",R,[w,O,s("pre",H,[s("code",null,[s("span",M,[s("span",U,"$HOME/.celestia-light-"+e(l(n).mochaChainId),1)])])]),s("pre",L,[s("code",null,[s("span",$,[s("span",G,"$HOME/.celestia-light-"+e(l(n).mochaChainId),1)])])])]),s("div",Y,[K,j,s("pre",Q,[s("code",null,[s("span",J,[s("span",X,"$HOME/.celestia-light-"+e(l(n).arabicaChainId),1)])])]),s("pre",z,[s("code",null,[s("span",W,[s("span",Z,"$HOME/.celestia-light-"+e(l(n).arabicaChainId),1)])])])])])]),ss,s("div",as,[os,s("div",ns,[s("div",es,[ls,ts,s("pre",ps,[s("code",null,[cs,a(`
`),rs,a(`
`),is,a(`
`),s("span",ds,[_s,Es,ys,s("span",hs,"celestia light start --p2p.network "+e(l(n).mainnetChainId)+" --core.ip rpc.celestia.pops.one --gateway",1)]),a(`
`),us,a(`
`),bs,a(`
`),Cs,a(`
`),Fs,a(`
`),gs,a(`
`),fs,a(`
`),Ts,a(`
`),s("span",As,[ms,vs,ks,s("span",Ss,'"'+e(l(n).mainnetChainId)+'"',1),qs]),a(`
`),Bs,a(`
`),Ps,a(`
`),Ds,a(`
`),Is,a(`
`),Vs,a(`
`),xs,a(`
`),Ns])]),s("pre",Rs,[s("code",null,[ws,a(`
`),Os,a(`
`),Hs,a(`
`),s("span",Ms,[Us,Ls,$s,s("span",Gs,"celestia light start --p2p.network "+e(l(n).mainnetChainId)+" --core.ip rpc.celestia.pops.one --gateway",1)]),a(`
`),Ys,a(`
`),Ks,a(`
`),js,a(`
`),Qs,a(`
`),Js,a(`
`),Xs,a(`
`),zs,a(`
`),s("span",Ws,[Zs,sa,aa,s("span",oa,'"'+e(l(n).mainnetChainId)+'"',1),na]),a(`
`),ea,a(`
`),la,a(`
`),ta,a(`
`),pa,a(`
`),ca,a(`
`),ra,a(`
`),ia])])]),s("div",da,[_a,Ea,s("pre",ya,[s("code",null,[ha,a(`
`),ua,a(`
`),ba,a(`
`),s("span",Ca,[Fa,ga,fa,s("span",Ta,"celestia light start --p2p.network "+e(l(n).mochaChainId)+" --core.ip consensus-full-mocha-4.celestia-mocha.com --gateway",1)]),a(`
`),Aa,a(`
`),ma,a(`
`),va,a(`
`),ka,a(`
`),s("span",Sa,[qa,s("span",Ba,"$HOME/.celestia-light-"+e(l(n).mochaChainId)+"/:/home/celestia/.celestia-light-"+e(l(n).mochaChainId)+"/",1),Pa]),a(`
`),Da,a(`
`),Ia,a(`
`),s("span",Va,[xa,Na,Ra,s("span",wa,'"'+e(l(n).mochaChainId)+'"',1),Oa]),a(`
`),Ha,a(`
`),Ma,a(`
`),Ua,a(`
`),La,a(`
`),$a,a(`
`),Ga,a(`
`),Ya])]),s("pre",Ka,[s("code",null,[ja,a(`
`),Qa,a(`
`),Ja,a(`
`),s("span",Xa,[za,Wa,Za,s("span",so,"celestia light start --p2p.network "+e(l(n).mochaChainId)+" --core.ip consensus-full-mocha-4.celestia-mocha.com --gateway",1)]),a(`
`),ao,a(`
`),oo,a(`
`),no,a(`
`),eo,a(`
`),s("span",lo,[to,s("span",po,"$HOME/.celestia-light-"+e(l(n).mochaChainId)+"/:/home/celestia/.celestia-light-"+e(l(n).mochaChainId)+"/",1),co]),a(`
`),ro,a(`
`),io,a(`
`),s("span",_o,[Eo,yo,ho,s("span",uo,'"'+e(l(n).mochaChainId)+'"',1),bo]),a(`
`),Co,a(`
`),Fo,a(`
`),go,a(`
`),fo,a(`
`),To,a(`
`),Ao,a(`
`),mo])])]),s("div",vo,[ko,So,s("pre",qo,[s("code",null,[Bo,a(`
`),Po,a(`
`),Do,a(`
`),s("span",Io,[Vo,xo,No,s("span",Ro,"celestia light start --p2p.network "+e(l(n).arabicaChainId)+" --core.ip validator-1.celestia-arabica-11.com --gateway",1)]),a(`
`),wo,a(`
`),Oo,a(`
`),Ho,a(`
`),Mo,a(`
`),s("span",Uo,[Lo,s("span",$o,"$HOME/.celestia-light-"+e(l(n).arabicaChainId)+"/:/home/celestia/.celestia-light-"+e(l(n).arabicaChainId)+"/",1),Go]),a(`
`),Yo,a(`
`),Ko,a(`
`),s("span",jo,[Qo,Jo,Xo,s("span",zo,'"'+e(l(n).arabicaChainId)+'"',1),Wo]),a(`
`),Zo,a(`
`),sn,a(`
`),an,a(`
`),on,a(`
`),nn,a(`
`),en,a(`
`),ln])]),s("pre",tn,[s("code",null,[pn,a(`
`),cn,a(`
`),rn,a(`
`),s("span",dn,[_n,En,yn,s("span",hn,"celestia light start --p2p.network "+e(l(n).arabicaChainId)+" --core.ip validator-1.celestia-arabica-11.com --gateway",1)]),a(`
`),un,a(`
`),bn,a(`
`),Cn,a(`
`),Fn,a(`
`),s("span",gn,[fn,s("span",Tn,"$HOME/.celestia-light-"+e(l(n).arabicaChainId)+"/:/home/celestia/.celestia-light-"+e(l(n).arabicaChainId)+"/",1),An]),a(`
`),mn,a(`
`),vn,a(`
`),s("span",kn,[Sn,qn,Bn,s("span",Pn,'"'+e(l(n).arabicaChainId)+'"',1),Dn]),a(`
`),In,a(`
`),Vn,a(`
`),xn,a(`
`),Nn,a(`
`),Rn,a(`
`),wn,a(`
`),On])])])])]),Hn]))}});export{Kn as __pageData,jn as default};
