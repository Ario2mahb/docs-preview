import{c as o}from"./chunks/constants.dc70dfe7.js";import{o as t,c as p,k as s,t as l,l as e,a,Q as n}from"./chunks/framework.86842dc0.js";const c=n(`<h1 id="run-an-op-stack-devnet-posting-celestia" tabindex="-1">Run an OP Stack devnet posting Celestia <a class="header-anchor" href="#run-an-op-stack-devnet-posting-celestia" aria-label="Permalink to &quot;Run an OP Stack devnet posting Celestia&quot;">​</a></h1><p>This guide will show you how to run your own OP Stack devnet locally that posts to a Celestia network.</p><p>If you&#39;d like to use a Rollups as a Service (RaaS) provider, you can visit the RaaS category in the menu.</p><h2 id="dependency-setup" tabindex="-1">Dependency setup <a class="header-anchor" href="#dependency-setup" aria-label="Permalink to &quot;Dependency setup&quot;">​</a></h2><h3 id="environment-setup" tabindex="-1">Environment setup <a class="header-anchor" href="#environment-setup" aria-label="Permalink to &quot;Environment setup&quot;">​</a></h3><p>First, <a href="./../nodes/environment">install dependencies for Celestia software</a> and for <a href="https://community.optimism.io/docs/developers/build/dev-node/" target="_blank" rel="noreferrer">OP Stack</a>.</p><h3 id="clone-repository" tabindex="-1">Clone repository <a class="header-anchor" href="#clone-repository" aria-label="Permalink to &quot;Clone repository&quot;">​</a></h3><p>Next, clone the repo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/celestiaorg/optimism</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">optimism</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/celestiaorg/optimism</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">optimism</span></span></code></pre></div><p>Check out to the version for either the <a href="https://github.com/celestiaorg/optimism/releases" target="_blank" rel="noreferrer">stable version</a> or <a href="https://github.com/celestiaorg/optimism/tree/celestia-develop" target="_blank" rel="noreferrer">upstream version</a>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dl7xJ" id="tab-JnYnQPT" checked="checked"><label for="tab-JnYnQPT">v1.2.0-OP_op-node/v1.7.5-CN_v0.13.2</label><input type="radio" name="group-dl7xJ" id="tab-R9q0S-t"><label for="tab-R9q0S-t">celestia-develop</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tags/v1.2.0-OP_op-node/v1.7.5-CN_v0.13.2</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tags/v1.2.0-OP_op-node/v1.7.5-CN_v0.13.2</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-develop</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-develop</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span></code></pre></div></div></div><h2 id="build-devnet" tabindex="-1">Build devnet <a class="header-anchor" href="#build-devnet" aria-label="Permalink to &quot;Build devnet&quot;">​</a></h2><p>Build TypeScript definitions for TS dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span></span></code></pre></div><p>Set environment variables to start network:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> SEQUENCER_BATCH_INBOX_ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0xff00000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> L2OO_ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0x70997970C51812dc3A010C7d01b50e0d17dc79C8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> SEQUENCER_BATCH_INBOX_ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0xff00000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> L2OO_ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0x70997970C51812dc3A010C7d01b50e0d17dc79C8</span></span></code></pre></div><h2 id="using-a-light-node" tabindex="-1">Using a light node <a class="header-anchor" href="#using-a-light-node" aria-label="Permalink to &quot;Using a light node&quot;">​</a></h2><p>In order to allow your light node to post and retrieve data without errors, you will need to change <code>UseShareExchange</code> to <code>false</code> in:</p>`,18),r={class:"vp-code-group vp-adaptive-theme"},i=n('<div class="tabs"><input type="radio" name="group-5DDR8" id="tab-NeAvfuU" checked="checked"><label for="tab-NeAvfuU">Mainnet Beta</label><input type="radio" name="group-5DDR8" id="tab-4VfHIXY"><label for="tab-4VfHIXY">Mocha</label><input type="radio" name="group-5DDR8" id="tab-zD0aUcs"><label for="tab-zD0aUcs">Arabica</label></div>',1),d={class:"blocks"},E=n('<div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$HOME/.celestia-light/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$HOME/.celestia-light/config.toml</span></span></code></pre></div>',1),y={class:"language-bash vp-adaptive-theme"},_=s("button",{title:"Copy Code",class:"copy"},null,-1),h=s("span",{class:"lang"},"bash",-1),F={class:"shiki github-dark vp-code-dark"},u={class:"line"},b={style:{color:"#E1E4E8"}},C={class:"shiki github-light vp-code-light"},g={class:"line"},f={style:{color:"#24292E"}},T={class:"language-bash vp-adaptive-theme"},v=s("button",{title:"Copy Code",class:"copy"},null,-1),m=s("span",{class:"lang"},"bash",-1),A={class:"shiki github-dark vp-code-dark"},k={class:"line"},B={style:{color:"#E1E4E8"}},S={class:"shiki github-light vp-code-light"},D={class:"line"},P={style:{color:"#24292E"}},I=n('<p>If you choose to use your own node store, the light node must be <strong>fully synced</strong> and <strong>funded</strong> for you to be able to submit and retrieve <code>PayForBlobs</code> to a Celestia network. Visit the <a href="./../nodes/arabica-devnet">Arabica</a> or <a href="./../nodes/mocha-testnet">Mocha</a> pages to visit their faucets. If it is not synced, you will run into <a href="https://github.com/celestiaorg/celestia-node/issues/2151/" target="_blank" rel="noreferrer">errors similar to this</a>.</p><p>In order to mount existing data, you must have a node store that is in the default directory:</p>',2),q={class:"vp-code-group vp-adaptive-theme"},N=n('<div class="tabs"><input type="radio" name="group-JIq3i" id="tab-vccnjcp" checked="checked"><label for="tab-vccnjcp">Mainnet Beta</label><input type="radio" name="group-JIq3i" id="tab-ui-uiYB"><label for="tab-ui-uiYB">Mocha</label><input type="radio" name="group-JIq3i" id="tab-soMU7X1"><label for="tab-soMU7X1">Arabica</label></div>',1),V={class:"blocks"},x=n('<div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$HOME/.celestia-light</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$HOME/.celestia-light</span></span></code></pre></div>',1),R={class:"language-bash vp-adaptive-theme"},w=s("button",{title:"Copy Code",class:"copy"},null,-1),O=s("span",{class:"lang"},"bash",-1),H={class:"shiki github-dark vp-code-dark"},L={class:"line"},M={style:{color:"#E1E4E8"}},U={class:"shiki github-light vp-code-light"},K={class:"line"},G={style:{color:"#24292E"}},W={class:"language-bash vp-adaptive-theme"},$=s("button",{title:"Copy Code",class:"copy"},null,-1),z=s("span",{class:"lang"},"bash",-1),Y={class:"shiki github-dark vp-code-dark"},X={class:"line"},J={style:{color:"#E1E4E8"}},Q={class:"shiki github-light vp-code-light"},Z={class:"line"},j={style:{color:"#24292E"}},ss=n('<p>By default, the node will run with the account named <code>my_celes_key</code>. If you have your own setup you&#39;d like to try, you can always edit <code>optimism/ops-bedrock/docker-compose.yml</code> to work with your setup.</p><h3 id="docker-changes" tabindex="-1">Docker changes <a class="header-anchor" href="#docker-changes" aria-label="Permalink to &quot;Docker changes&quot;">​</a></h3><p>You will need to modify the <code>da:</code> section of your <code>$HOME/optimism/ops-bedrock/docker-compose.yml</code> for your specific use, similarly to the example below. This setup will use <code>celestia-node</code> with a DA server on port 26658.</p><p>For the <code>P2P_NETWORK</code> variable, you&#39;ll need to supply the network of choice, either <code>celestia</code>, <code>mocha</code>, or <code>arabica</code>. Using <code>celestia</code>, the volume path will be just <code>.celestia-light</code> instead of <code>.celestia-light-&lt;network&gt;</code>. You will also need to provide a <code>--core.ip &lt;RPC_URL&gt;</code> for the network you are using.</p>',4),as={class:"vp-code-group vp-adaptive-theme"},ns=n('<div class="tabs"><input type="radio" name="group-27XmZ" id="tab-UQB6oO1" checked="checked"><label for="tab-UQB6oO1">Mainnet Beta</label><input type="radio" name="group-27XmZ" id="tab-kJA0B3k"><label for="tab-kJA0B3k">Mocha testnet</label><input type="radio" name="group-27XmZ" id="tab-qiibew_"><label for="tab-qiibew_">Arabica devnet</label></div>',1),os={class:"blocks"},ls={class:"language-yaml vp-adaptive-theme active"},es=s("button",{title:"Copy Code",class:"copy"},null,-1),ts=s("span",{class:"lang"},"yaml",-1),ps={class:"shiki github-dark has-diff vp-code-dark"},cs=s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"da"),s("span",{style:{color:"#E1E4E8"}},":")],-1),rs=n('<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#E1E4E8;"> </span></span>',1),is=n('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#E1E4E8;"> </span></span>',1),ds={class:"line diff add"},Es=s("span",{style:{color:"#E1E4E8"}},"  ",-1),ys=s("span",{style:{color:"#85E89D"}},"command",-1),_s=s("span",{style:{color:"#E1E4E8"}},": ",-1),hs={style:{color:"#9ECBFF"}},Fs=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"ports"),s("span",{style:{color:"#E1E4E8"}},":")],-1),us=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26658:26658"')],-1),bs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26659:26659"'),s("span",{style:{color:"#E1E4E8"}}," ")],-1),Cs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"volumes"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),gs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},"$HOME/.celestia-light/:/home/celestia/.celestia-light/"),s("span",{style:{color:"#E1E4E8"}}," ")],-1),fs=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"environment"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Ts=n('<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">NODE_TYPE</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;"> </span></span>',1),vs={class:"line diff add"},ms=s("span",{style:{color:"#E1E4E8"}},"    ",-1),As=s("span",{style:{color:"#85E89D"}},"P2P_NETWORK",-1),ks=s("span",{style:{color:"#E1E4E8"}},": ",-1),Bs={style:{color:"#9ECBFF"}},Ss=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ds=n('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">user</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span></span>',1),Ps=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"healthcheck"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Is=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">test</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;CMD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;curl&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-f&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#E1E4E8;">]</span></span>',1),qs=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>',1),Ns=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">timeout</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5s</span></span>',1),Vs=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">retries</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>',1),xs=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">start_period</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30s</span></span>',1),Rs={class:"shiki github-light has-diff vp-code-light"},ws=s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"da"),s("span",{style:{color:"#24292E"}},":")],-1),Os=n('<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#24292E;"> </span></span>',1),Hs=n('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#24292E;"> </span></span>',1),Ls={class:"line diff add"},Ms=s("span",{style:{color:"#24292E"}},"  ",-1),Us=s("span",{style:{color:"#22863A"}},"command",-1),Ks=s("span",{style:{color:"#24292E"}},": ",-1),Gs={style:{color:"#032F62"}},Ws=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"ports"),s("span",{style:{color:"#24292E"}},":")],-1),$s=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26658:26658"')],-1),zs=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26659:26659"'),s("span",{style:{color:"#24292E"}}," ")],-1),Ys=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"volumes"),s("span",{style:{color:"#24292E"}},": ")],-1),Xs=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},"$HOME/.celestia-light/:/home/celestia/.celestia-light/"),s("span",{style:{color:"#24292E"}}," ")],-1),Js=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"environment"),s("span",{style:{color:"#24292E"}},": ")],-1),Qs=n('<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#22863A;">NODE_TYPE</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;"> </span></span>',1),Zs={class:"line diff add"},js=s("span",{style:{color:"#24292E"}},"    ",-1),sa=s("span",{style:{color:"#22863A"}},"P2P_NETWORK",-1),aa=s("span",{style:{color:"#24292E"}},": ",-1),na={style:{color:"#032F62"}},oa=s("span",{style:{color:"#24292E"}}," ",-1),la=n('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">user</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span></span>',1),ea=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"healthcheck"),s("span",{style:{color:"#24292E"}},":")],-1),ta=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">test</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;CMD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;curl&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-f&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#24292E;">]</span></span>',1),pa=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>',1),ca=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">timeout</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5s</span></span>',1),ra=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">retries</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>',1),ia=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">start_period</span><span style="color:#24292E;">: </span><span style="color:#032F62;">30s</span></span>',1),da={class:"language-yaml vp-adaptive-theme"},Ea=s("button",{title:"Copy Code",class:"copy"},null,-1),ya=s("span",{class:"lang"},"yaml",-1),_a={class:"shiki github-dark has-diff vp-code-dark"},ha=s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"da"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Fa=n('<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#E1E4E8;"> </span></span>',1),ua=n('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#E1E4E8;"> </span></span>',1),ba={class:"line diff add"},Ca=s("span",{style:{color:"#E1E4E8"}},"  ",-1),ga=s("span",{style:{color:"#85E89D"}},"command",-1),fa=s("span",{style:{color:"#E1E4E8"}},": ",-1),Ta={style:{color:"#9ECBFF"}},va=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"ports"),s("span",{style:{color:"#E1E4E8"}},":")],-1),ma=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26658:26658"')],-1),Aa=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26659:26659"'),s("span",{style:{color:"#E1E4E8"}}," ")],-1),ka=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"volumes"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Ba={class:"line diff add"},Sa=s("span",{style:{color:"#E1E4E8"}},"    - ",-1),Da={style:{color:"#9ECBFF"}},Pa=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ia=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"environment"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),qa=n('<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">NODE_TYPE</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;"> </span></span>',1),Na={class:"line diff add"},Va=s("span",{style:{color:"#E1E4E8"}},"    ",-1),xa=s("span",{style:{color:"#85E89D"}},"P2P_NETWORK",-1),Ra=s("span",{style:{color:"#E1E4E8"}},": ",-1),wa={style:{color:"#9ECBFF"}},Oa=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ha=n('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">user</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span></span>',1),La=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"healthcheck"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Ma=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">test</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;CMD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;curl&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-f&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#E1E4E8;">]</span></span>',1),Ua=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>',1),Ka=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">timeout</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5s</span></span>',1),Ga=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">retries</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>',1),Wa=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">start_period</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30s</span></span>',1),$a={class:"shiki github-light has-diff vp-code-light"},za=s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"da"),s("span",{style:{color:"#24292E"}},":")],-1),Ya=n('<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#24292E;"> </span></span>',1),Xa=n('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#24292E;"> </span></span>',1),Ja={class:"line diff add"},Qa=s("span",{style:{color:"#24292E"}},"  ",-1),Za=s("span",{style:{color:"#22863A"}},"command",-1),ja=s("span",{style:{color:"#24292E"}},": ",-1),sn={style:{color:"#032F62"}},an=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"ports"),s("span",{style:{color:"#24292E"}},":")],-1),nn=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26658:26658"')],-1),on=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26659:26659"'),s("span",{style:{color:"#24292E"}}," ")],-1),ln=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"volumes"),s("span",{style:{color:"#24292E"}},": ")],-1),en={class:"line diff add"},tn=s("span",{style:{color:"#24292E"}},"    - ",-1),pn={style:{color:"#032F62"}},cn=s("span",{style:{color:"#24292E"}}," ",-1),rn=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"environment"),s("span",{style:{color:"#24292E"}},": ")],-1),dn=n('<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#22863A;">NODE_TYPE</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;"> </span></span>',1),En={class:"line diff add"},yn=s("span",{style:{color:"#24292E"}},"    ",-1),_n=s("span",{style:{color:"#22863A"}},"P2P_NETWORK",-1),hn=s("span",{style:{color:"#24292E"}},": ",-1),Fn={style:{color:"#032F62"}},un=s("span",{style:{color:"#24292E"}}," ",-1),bn=n('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">user</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span></span>',1),Cn=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"healthcheck"),s("span",{style:{color:"#24292E"}},":")],-1),gn=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">test</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;CMD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;curl&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-f&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#24292E;">]</span></span>',1),fn=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>',1),Tn=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">timeout</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5s</span></span>',1),vn=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">retries</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>',1),mn=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">start_period</span><span style="color:#24292E;">: </span><span style="color:#032F62;">30s</span></span>',1),An={class:"language-yaml vp-adaptive-theme"},kn=s("button",{title:"Copy Code",class:"copy"},null,-1),Bn=s("span",{class:"lang"},"yaml",-1),Sn={class:"shiki github-dark has-diff vp-code-dark"},Dn=s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"da"),s("span",{style:{color:"#E1E4E8"}},":")],-1),Pn=n('<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#E1E4E8;"> </span></span>',1),In=n('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#E1E4E8;"> </span></span>',1),qn={class:"line diff add"},Nn=s("span",{style:{color:"#E1E4E8"}},"  ",-1),Vn=s("span",{style:{color:"#85E89D"}},"command",-1),xn=s("span",{style:{color:"#E1E4E8"}},": ",-1),Rn={style:{color:"#9ECBFF"}},wn=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"ports"),s("span",{style:{color:"#E1E4E8"}},":")],-1),On=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26658:26658"')],-1),Hn=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    - "),s("span",{style:{color:"#9ECBFF"}},'"26659:26659"'),s("span",{style:{color:"#E1E4E8"}}," ")],-1),Ln=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"volumes"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),Mn={class:"line diff add"},Un=s("span",{style:{color:"#E1E4E8"}},"    - ",-1),Kn={style:{color:"#9ECBFF"}},Gn=s("span",{style:{color:"#E1E4E8"}}," ",-1),Wn=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"environment"),s("span",{style:{color:"#E1E4E8"}},": ")],-1),$n=n('<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">NODE_TYPE</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;"> </span></span>',1),zn={class:"line diff add"},Yn=s("span",{style:{color:"#E1E4E8"}},"    ",-1),Xn=s("span",{style:{color:"#85E89D"}},"P2P_NETWORK",-1),Jn=s("span",{style:{color:"#E1E4E8"}},": ",-1),Qn={style:{color:"#9ECBFF"}},Zn=s("span",{style:{color:"#E1E4E8"}}," ",-1),jn=n('<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">user</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span></span>',1),so=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#85E89D"}},"healthcheck"),s("span",{style:{color:"#E1E4E8"}},":")],-1),ao=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">test</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;CMD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;curl&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-f&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#E1E4E8;">]</span></span>',1),no=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>',1),oo=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">timeout</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5s</span></span>',1),lo=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">retries</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>',1),eo=n('<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">start_period</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30s</span></span>',1),to={class:"shiki github-light has-diff vp-code-light"},po=s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"da"),s("span",{style:{color:"#24292E"}},":")],-1),co=n('<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/rollkit/local-celestia-devnet:v0.13.1</span><span style="color:#24292E;"> </span></span>',1),ro=n('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ghcr.io/celestiaorg/celestia-node:v0.13.2</span><span style="color:#24292E;"> </span></span>',1),io={class:"line diff add"},Eo=s("span",{style:{color:"#24292E"}},"  ",-1),yo=s("span",{style:{color:"#22863A"}},"command",-1),_o=s("span",{style:{color:"#24292E"}},": ",-1),ho={style:{color:"#032F62"}},Fo=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"ports"),s("span",{style:{color:"#24292E"}},":")],-1),uo=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26658:26658"')],-1),bo=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    - "),s("span",{style:{color:"#032F62"}},'"26659:26659"'),s("span",{style:{color:"#24292E"}}," ")],-1),Co=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"volumes"),s("span",{style:{color:"#24292E"}},": ")],-1),go={class:"line diff add"},fo=s("span",{style:{color:"#24292E"}},"    - ",-1),To={style:{color:"#032F62"}},vo=s("span",{style:{color:"#24292E"}}," ",-1),mo=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"environment"),s("span",{style:{color:"#24292E"}},": ")],-1),Ao=n('<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#22863A;">NODE_TYPE</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;"> </span></span>',1),ko={class:"line diff add"},Bo=s("span",{style:{color:"#24292E"}},"    ",-1),So=s("span",{style:{color:"#22863A"}},"P2P_NETWORK",-1),Do=s("span",{style:{color:"#24292E"}},": ",-1),Po={style:{color:"#032F62"}},Io=s("span",{style:{color:"#24292E"}}," ",-1),qo=n('<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#22863A;">user</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span></span>',1),No=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#22863A"}},"healthcheck"),s("span",{style:{color:"#24292E"}},":")],-1),Vo=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">test</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;CMD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;curl&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-f&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;http://localhost:26659/header/1&quot;</span><span style="color:#24292E;">]</span></span>',1),xo=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>',1),Ro=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">timeout</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5s</span></span>',1),wo=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">retries</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>',1),Oo=n('<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">start_period</span><span style="color:#24292E;">: </span><span style="color:#032F62;">30s</span></span>',1),Ho=n(`<h3 id="set-your-celestia-node-auth-token" tabindex="-1">Set your Celestia node auth token <a class="header-anchor" href="#set-your-celestia-node-auth-token" aria-label="Permalink to &quot;Set your Celestia node auth token&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-sWUmr" id="tab-O8E-TzS" checked="checked"><label for="tab-O8E-TzS">Mainnet Beta</label><input type="radio" name="group-sWUmr" id="tab--MM_B-Y"><label for="tab--MM_B-Y">Mocha testnet</label><input type="radio" name="group-sWUmr" id="tab-2-97JFr"><label for="tab-2-97JFr">Arabica devnet</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">celestia</span><span style="color:#9ECBFF;"> light auth write)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">celestia</span><span style="color:#032F62;"> light auth write)</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">celestia</span><span style="color:#9ECBFF;"> light auth write </span><span style="color:#79B8FF;">--p2p.network</span><span style="color:#9ECBFF;"> mocha)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">celestia</span><span style="color:#032F62;"> light auth write </span><span style="color:#005CC5;">--p2p.network</span><span style="color:#032F62;"> mocha)</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">celestia</span><span style="color:#9ECBFF;"> light auth write </span><span style="color:#79B8FF;">--p2p.network</span><span style="color:#9ECBFF;"> arabica)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELESTIA_NODE_AUTH_TOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">celestia</span><span style="color:#032F62;"> light auth write </span><span style="color:#005CC5;">--p2p.network</span><span style="color:#032F62;"> arabica)</span></span></code></pre></div></div></div><p>Now you&#39;re ready to start your devnet.</p><h2 id="start-devnet" tabindex="-1">Start devnet <a class="header-anchor" href="#start-devnet" aria-label="Permalink to &quot;Start devnet&quot;">​</a></h2><p>Start the network by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-up</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-up</span></span></code></pre></div><p>This starts up the layer 1 (ETH), layer 2 (<code>op-geth</code>), data availability layer (Celestia), the sequencer (<code>op-node</code>), batch submitter (<code>op-batcher</code>), state commitment service (<code>op-proposer</code>).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You&#39;ll see logs related to blank variables, it is safe to ignore these.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WARN[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;CELESTIA_NODE_AUTH_TOKEN&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Defaulting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">blank</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string.</span></span>
<span class="line"><span style="color:#B392F0;">WARN[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;DGF_ADDRESS&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Defaulting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">blank</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string.</span></span>
<span class="line"><span style="color:#B392F0;">WARN[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;L2OO_ADDRESS&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Defaulting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">blank</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string.</span></span>
<span class="line"><span style="color:#B392F0;">WARN[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;DG_TYPE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Defaulting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">blank</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string.</span></span>
<span class="line"><span style="color:#B392F0;">WARN[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;PROPOSAL_INTERVAL&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Defaulting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">blank</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WARN[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;CELESTIA_NODE_AUTH_TOKEN&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">variable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Defaulting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">blank</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string.</span></span>
<span class="line"><span style="color:#6F42C1;">WARN[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;DGF_ADDRESS&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">variable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Defaulting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">blank</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string.</span></span>
<span class="line"><span style="color:#6F42C1;">WARN[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;L2OO_ADDRESS&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">variable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Defaulting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">blank</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string.</span></span>
<span class="line"><span style="color:#6F42C1;">WARN[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;DG_TYPE&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">variable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Defaulting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">blank</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string.</span></span>
<span class="line"><span style="color:#6F42C1;">WARN[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;PROPOSAL_INTERVAL&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">variable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Defaulting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">blank</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string.</span></span></code></pre></div></div><h3 id="view-the-logs-of-the-devnet" tabindex="-1">View the logs of the devnet <a class="header-anchor" href="#view-the-logs-of-the-devnet" aria-label="Permalink to &quot;View the logs of the devnet&quot;">​</a></h3><p>If you&#39;d like to view the logs of the devnet, run the following command from the root of the Optimism directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-logs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-logs</span></span></code></pre></div><h3 id="optional-stop-devnet" tabindex="-1">Optional: Stop devnet <a class="header-anchor" href="#optional-stop-devnet" aria-label="Permalink to &quot;Optional: Stop devnet&quot;">​</a></h3><p>If you&#39;d like to start the network over, use the following command to safely shut down all of the containers:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-down</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-down</span></span></code></pre></div><p>Then clean out the old config:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-clean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-clean</span></span></code></pre></div><h2 id="deploying-to-an-l1-or-l2" tabindex="-1">Deploying to an L1 (or L2) <a class="header-anchor" href="#deploying-to-an-l1-or-l2" aria-label="Permalink to &quot;Deploying to an L1 (or L2)&quot;">​</a></h2><p>If you&#39;d like to deploy to an EVM L1 or L2, reference the <a href="https://community.optimism.io/docs/developers/bedrock/node-operator-guide/" target="_blank" rel="noreferrer">OP stack deployment guide</a>.</p><h2 id="find-a-transaction" tabindex="-1">Find a transaction <a class="header-anchor" href="#find-a-transaction" aria-label="Permalink to &quot;Find a transaction&quot;">​</a></h2><p>Now, we&#39;ll check for a recent transaction on the L1 with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cast</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">latest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rpc-url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8545</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cast</span><span style="color:#24292E;"> </span><span style="color:#032F62;">block</span><span style="color:#24292E;"> </span><span style="color:#032F62;">latest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rpc-url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8545</span></span></code></pre></div><p>Output of a block that contains a transaction will look like this:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">baseFeePerGas        7</span></span>
<span class="line"><span style="color:#79B8FF;">difficulty           2</span></span>
<span class="line"><span style="color:#79B8FF;">extraData            0xd883010d04846765746888676f312e32312e33856c696e7578000000000000006b3afa42dce1f87f1f07a1ef569c4d43e41738ef93c865098bfa1458645f384e2e4498bcfe4ad9353ff1913a2e16162f496fafe5b0939a6c78fb5b503248d6da01</span></span>
<span class="line"><span style="color:#79B8FF;">gasLimit             30000000</span></span>
<span class="line"><span style="color:#79B8FF;">gasUsed              21568</span></span>
<span class="line"><span style="color:#79B8FF;">hash                 0x1cb54d2369752ef73511c202ff9cdfd0eadf3a77b7aef0092bea63f2b5d57659</span></span>
<span class="line"><span style="color:#79B8FF;">logsBloom            0xspan></span>
<span class="line"><span style="color:#79B8FF;">miner                0x0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">mixHash              0x0000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">nonce                0x0000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">number               1141</span></span>
<span class="line"><span style="color:#79B8FF;">parentHash           0x664bf4bb4a57dd5768a0a98991d77c58fb7a4e164c2581c79fb33ce9c3d4c250</span></span>
<span class="line"><span style="color:#79B8FF;">receiptsRoot         0xaf8ff6af1180c8be9e4e8f3a5f882b3b227233f4abbefa479836d3721682a389</span></span>
<span class="line"><span style="color:#79B8FF;">sealFields           []</span></span>
<span class="line"><span style="color:#79B8FF;">sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347</span></span>
<span class="line"><span style="color:#79B8FF;">size                 767</span></span>
<span class="line"><span style="color:#79B8FF;">stateRoot            0xd4b998a35d20d98ed3488221f0c161a0a9572d3de66399482553c8e3d2fae751</span></span>
<span class="line"><span style="color:#79B8FF;">timestamp            1699638350</span></span>
<span class="line"><span style="color:#79B8FF;">withdrawalsRoot</span></span>
<span class="line"><span style="color:#79B8FF;">totalDifficulty      2283</span></span>
<span class="line"><span style="color:#79B8FF;">transactions:        [</span></span>
<span class="line"><span style="color:#79B8FF;">  0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span>
<span class="line"><span style="color:#79B8FF;">]</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#005CC5;">baseFeePerGas        7</span></span>
<span class="line"><span style="color:#005CC5;">difficulty           2</span></span>
<span class="line"><span style="color:#005CC5;">extraData            0xd883010d04846765746888676f312e32312e33856c696e7578000000000000006b3afa42dce1f87f1f07a1ef569c4d43e41738ef93c865098bfa1458645f384e2e4498bcfe4ad9353ff1913a2e16162f496fafe5b0939a6c78fb5b503248d6da01</span></span>
<span class="line"><span style="color:#005CC5;">gasLimit             30000000</span></span>
<span class="line"><span style="color:#005CC5;">gasUsed              21568</span></span>
<span class="line"><span style="color:#005CC5;">hash                 0x1cb54d2369752ef73511c202ff9cdfd0eadf3a77b7aef0092bea63f2b5d57659</span></span>
<span class="line"><span style="color:#005CC5;">logsBloom            0xspan></span>
<span class="line"><span style="color:#005CC5;">miner                0x0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">mixHash              0x0000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">nonce                0x0000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">number               1141</span></span>
<span class="line"><span style="color:#005CC5;">parentHash           0x664bf4bb4a57dd5768a0a98991d77c58fb7a4e164c2581c79fb33ce9c3d4c250</span></span>
<span class="line"><span style="color:#005CC5;">receiptsRoot         0xaf8ff6af1180c8be9e4e8f3a5f882b3b227233f4abbefa479836d3721682a389</span></span>
<span class="line"><span style="color:#005CC5;">sealFields           []</span></span>
<span class="line"><span style="color:#005CC5;">sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347</span></span>
<span class="line"><span style="color:#005CC5;">size                 767</span></span>
<span class="line"><span style="color:#005CC5;">stateRoot            0xd4b998a35d20d98ed3488221f0c161a0a9572d3de66399482553c8e3d2fae751</span></span>
<span class="line"><span style="color:#005CC5;">timestamp            1699638350</span></span>
<span class="line"><span style="color:#005CC5;">withdrawalsRoot</span></span>
<span class="line"><span style="color:#005CC5;">totalDifficulty      2283</span></span>
<span class="line"><span style="color:#005CC5;">transactions:        [</span></span>
<span class="line"><span style="color:#005CC5;">  0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span>
<span class="line"><span style="color:#005CC5;">]</span></span></code></pre></div><p>Copy the transaction hash from <code>transactions: &lt;transaction-hash&gt;</code> and set it as a variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> TX_HASH</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> TX_HASH</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span></code></pre></div><h2 id="read-the-transaction-call-data" tabindex="-1">Read the transaction call data <a class="header-anchor" href="#read-the-transaction-call-data" aria-label="Permalink to &quot;Read the transaction call data&quot;">​</a></h2><p>Now read the transaction call data on the L1:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cast</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tx</span><span style="color:#E1E4E8;"> $TX_HASH </span><span style="color:#79B8FF;">--rpc-url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8545</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cast</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tx</span><span style="color:#24292E;"> $TX_HASH </span><span style="color:#005CC5;">--rpc-url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8545</span></span></code></pre></div><p>The output will look similar to below:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">blockHash            0x9f4dfae061b5ddd86f95a81be5daa0d7fe32e7f7f770f86dc375e0007d249bd2</span></span>
<span class="line"><span style="color:#79B8FF;">blockNumber          24</span></span>
<span class="line"><span style="color:#79B8FF;">from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC</span></span>
<span class="line"><span style="color:#79B8FF;">gas                  21572</span></span>
<span class="line"><span style="color:#79B8FF;">gasPrice             1040676758</span></span>
<span class="line"><span style="color:#79B8FF;">hash                 0xadd3a5dc0b8c605aeac891098e87cbaff43bb642896ebbf74f964c0690e46df2</span></span>
<span class="line"><span style="color:#79B8FF;">input                0xce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#79B8FF;">nonce                4</span></span>
<span class="line"><span style="color:#79B8FF;">r                    0xaf5c1505c7dfcebca94d9a6a8c0caf99b6c87a8ed6d6c0b3161c9026f270a84f</span></span>
<span class="line"><span style="color:#79B8FF;">s                    0x383ed2debf9f9055920cd7340418dda7e2bca6b989eb6992d83d123d4e322f2a</span></span>
<span class="line"><span style="color:#79B8FF;">to                   0xFf00000000000000000000000000000000000901</span></span>
<span class="line"><span style="color:#79B8FF;">transactionIndex     0</span></span>
<span class="line"><span style="color:#79B8FF;">v                    0</span></span>
<span class="line"><span style="color:#79B8FF;">value                0</span></span>
<span class="line"><span style="color:#79B8FF;">yParity              0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">blockHash            0x9f4dfae061b5ddd86f95a81be5daa0d7fe32e7f7f770f86dc375e0007d249bd2</span></span>
<span class="line"><span style="color:#005CC5;">blockNumber          24</span></span>
<span class="line"><span style="color:#005CC5;">from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC</span></span>
<span class="line"><span style="color:#005CC5;">gas                  21572</span></span>
<span class="line"><span style="color:#005CC5;">gasPrice             1040676758</span></span>
<span class="line"><span style="color:#005CC5;">hash                 0xadd3a5dc0b8c605aeac891098e87cbaff43bb642896ebbf74f964c0690e46df2</span></span>
<span class="line"><span style="color:#005CC5;">input                0xce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#005CC5;">nonce                4</span></span>
<span class="line"><span style="color:#005CC5;">r                    0xaf5c1505c7dfcebca94d9a6a8c0caf99b6c87a8ed6d6c0b3161c9026f270a84f</span></span>
<span class="line"><span style="color:#005CC5;">s                    0x383ed2debf9f9055920cd7340418dda7e2bca6b989eb6992d83d123d4e322f2a</span></span>
<span class="line"><span style="color:#005CC5;">to                   0xFf00000000000000000000000000000000000901</span></span>
<span class="line"><span style="color:#005CC5;">transactionIndex     0</span></span>
<span class="line"><span style="color:#005CC5;">v                    0</span></span>
<span class="line"><span style="color:#005CC5;">value                0</span></span>
<span class="line"><span style="color:#005CC5;">yParity              0</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You are looking for a batcher transaction to the address <code>0xFf00000000000000000000000000000000000901</code>.</p></div><p>First, remove the prefix <code>0xce</code>. Now, set the <code>input</code> as the <code>INPUT</code> variable and encode it as base64:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> INPUT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3500000000000000769074</span><span style="color:#9ECBFF;">a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> ENCODED_INPUT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#79B8FF;">echo</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#E1E4E8;">$INPUT</span><span style="color:#9ECBFF;">&quot; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">xxd</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">base64</span><span style="color:#9ECBFF;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> INPUT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3500000000000000769074</span><span style="color:#032F62;">a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> ENCODED_INPUT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#005CC5;">echo</span><span style="color:#032F62;"> &quot;</span><span style="color:#24292E;">$INPUT</span><span style="color:#032F62;">&quot; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">xxd</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-r</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-p</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">base64</span><span style="color:#032F62;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Remember to remove the <code>0xce</code> prefix!</p></div><h2 id="find-the-data-on-celestia" tabindex="-1">Find the data on Celestia <a class="header-anchor" href="#find-the-data-on-celestia" aria-label="Permalink to &quot;Find the data on Celestia&quot;">​</a></h2><p>Clone the <code>go-da</code> repository:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/rollkit/go-da.git</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">go-da/proto/da</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/rollkit/go-da.git</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">go-da/proto/da</span></span></code></pre></div><p>Now, from <code>go-da/proto/da</code> run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">grpcurl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-proto</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.proto</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-plaintext</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;{</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">ids</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">: [{</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">value</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">: </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$ENCODED_INPUT</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">}]}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:26650</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.DAService.Get</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">grpcurl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-proto</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.proto</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-plaintext</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">ids</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: [{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">value</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$ENCODED_INPUT</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">}]}&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:26650</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.DAService.Get</span></span></code></pre></div><p>Your result will look similar to the below!</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;blobs&quot;: [</span></span>
<span class="line"><span style="color:#79B8FF;">    {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;value&quot;: &quot;AKUumhJ8FnuyVrBs38FDKEIAAAAAAZB42trhw/DDc4GFAlv4klkv5Zh4E16mmO5fpNOS1f5wzpds8YK3S0Rvs4ULLJj13euw+Ovdv6Q23zuV1ShROEvk5aptIT7bGmZunvc1OiKwJTXVbN0BiGm6k2zNWq78cNsT2ez3+nzQq84Ds28or/aKz/o1w4NpV7w4caZtgJomX71w96m63+xzYnarXLu7WWvRrwbeb6cW8R93YHXt1r4+TXCBGVe76obzf5JLTNu22gksD2cL+83D8DGjX0FKcwZD0VofkGmboKY1uTddu8704s2MwgNNe09s1bzw+n9Fq6fKFw7pvwJL200eCS0oFJ3HfPAEywnlgyyGQc89dh+98GD5TrdU4aNql9afmW+sDzJtC9S0fzLWYROOS0bvK3W7EvNpmWXe5qrdzKlBmv1LZi4ofrrxLHGmbYOaJhHsEn+B81lGUh33HDet8K9nVKKSF2+W3Xul6uPSxydPBwsv2GHskR+yfUlDbvyl1ROTvtS1zXlpEPz0M1e/RIIt57fVj0Gm7TgACAAA//+Qdel2AQ==&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">    }</span></span>
<span class="line"><span style="color:#79B8FF;">  ]</span></span>
<span class="line"><span style="color:#79B8FF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">{</span></span>
<span class="line"><span style="color:#005CC5;">  &quot;blobs&quot;: [</span></span>
<span class="line"><span style="color:#005CC5;">    {</span></span>
<span class="line"><span style="color:#005CC5;">      &quot;value&quot;: &quot;AKUumhJ8FnuyVrBs38FDKEIAAAAAAZB42trhw/DDc4GFAlv4klkv5Zh4E16mmO5fpNOS1f5wzpds8YK3S0Rvs4ULLJj13euw+Ovdv6Q23zuV1ShROEvk5aptIT7bGmZunvc1OiKwJTXVbN0BiGm6k2zNWq78cNsT2ez3+nzQq84Ds28or/aKz/o1w4NpV7w4caZtgJomX71w96m63+xzYnarXLu7WWvRrwbeb6cW8R93YHXt1r4+TXCBGVe76obzf5JLTNu22gksD2cL+83D8DGjX0FKcwZD0VofkGmboKY1uTddu8704s2MwgNNe09s1bzw+n9Fq6fKFw7pvwJL200eCS0oFJ3HfPAEywnlgyyGQc89dh+98GD5TrdU4aNql9afmW+sDzJtC9S0fzLWYROOS0bvK3W7EvNpmWXe5qrdzKlBmv1LZi4ofrrxLHGmbYOaJhHsEn+B81lGUh33HDet8K9nVKKSF2+W3Xul6uPSxydPBwsv2GHskR+yfUlDbvyl1ROTvtS1zXlpEPz0M1e/RIIt57fVj0Gm7TgACAAA//+Qdel2AQ==&quot;</span></span>
<span class="line"><span style="color:#005CC5;">    }</span></span>
<span class="line"><span style="color:#005CC5;">  ]</span></span>
<span class="line"><span style="color:#005CC5;">}</span></span></code></pre></div><h2 id="ethereum-fallback-mechanism-in-op-stack" tabindex="-1">Ethereum fallback mechanism in OP Stack <a class="header-anchor" href="#ethereum-fallback-mechanism-in-op-stack" aria-label="Permalink to &quot;Ethereum fallback mechanism in OP Stack&quot;">​</a></h2><p>The <a href="./ethereum-fallback">Ethereum fallback mechanism</a> allows rollups to &quot;fall back&quot; to Ethereum or another EVM chain in the case of downtime or errors submitting data to Celestia.</p><h3 id="implementation-of-fallback" tabindex="-1">Implementation of fallback <a class="header-anchor" href="#implementation-of-fallback" aria-label="Permalink to &quot;Implementation of fallback&quot;">​</a></h3><p>The Ethereum fallback mechanism is implemented in the <a href="https://github.com/celestiaorg/optimism/tree/release-v1.1.0" target="_blank" rel="noreferrer">celestiaorg/optimism</a> v1.1.0 release.</p><p>The <code>op-batcher/batcher/driver.go</code> and <code>op-node/rollup/derive/calldata_source.go</code> files are part of the Ethereum fallback mechanism in the <code>op-batcher</code> and <code>op-node</code> respectively.</p><p>In <a href="https://github.com/celestiaorg/optimism/blob/release-v1.1.0/op-batcher/batcher/driver.go#L405-L419" target="_blank" rel="noreferrer"><code>driver.go</code>, the <code>calldataTxCandidate</code> function is responsible for the write path</a> of the Ethereum fallback. This function creates and submits a transaction to the batch inbox address with the given data. It uses the underlying <code>txmgr</code> to handle transaction sending and gas price management.</p><p>If the transaction data can be published as a blob to Celestia, it replaces the calldata with a blob identifier and sends the transaction with this data. If it cannot be published to Celestia, it falls back to Ethereum without any change to the transaction.</p><p>The blob identifier starts with the special prefix <code>0xce</code>, which was chosen as a mnemonic for Celestia, and indicates that the remaining data has to interpreted as a little-endian encoded Block Height (8 bytes) and Blob Commitment (32 bytes). The combination of these can later be used to retrieve the original calldata from Celestia.</p><table><thead><tr><th>Prefix</th><th>8 bytes</th><th>32 bytes</th></tr></thead><tbody><tr><td>0xce</td><td>Block Height</td><td>Blob Commitment</td></tr></tbody></table><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> (l </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">BatchSubmitter) </span><span style="color:#B392F0;">sendTransaction</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    txdata txData,</span></span>
<span class="line"><span style="color:#E1E4E8;">    queue </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">txmgr.Queue[txData],</span></span>
<span class="line"><span style="color:#E1E4E8;">    receiptsCh </span><span style="color:#F97583;">chan</span><span style="color:#E1E4E8;"> txmgr.TxReceipt[txData],</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> (l </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">BatchSubmitter) </span><span style="color:#6F42C1;">sendTransaction</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    txdata txData,</span></span>
<span class="line"><span style="color:#24292E;">    queue </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">txmgr.Queue[txData],</span></span>
<span class="line"><span style="color:#24292E;">    receiptsCh </span><span style="color:#D73A49;">chan</span><span style="color:#24292E;"> txmgr.TxReceipt[txData],</span></span>
<span class="line"><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>In <code>calldata_source.go</code>, <a href="https://github.com/celestiaorg/optimism/blob/release-v1.1.0/op-node/rollup/derive/calldata_source.go#L102-L139" target="_blank" rel="noreferrer">the <code>DataFromEVMTransactions</code> function defines the read path</a> of the Ethereum fallback. This function filters all of the transactions and returns the calldata from transactions that are sent to the batch inbox address from the batch sender address.</p><p>If the calldata matches the version prefix <code>0xce</code>, it is decoded as a blob identifier, the original calldata is retrieved from Celestia and returned for derivation. If the calldata does not match the prefix, the entire calldata is returned for derivation.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataFromEVMTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    config </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">rollup.Config,</span></span>
<span class="line"><span style="color:#E1E4E8;">    batcherAddr common.Address,</span></span>
<span class="line"><span style="color:#E1E4E8;">    txs types.Transactions,</span></span>
<span class="line"><span style="color:#E1E4E8;">    log log.Logger</span></span>
<span class="line"><span style="color:#E1E4E8;">) ([]eth.Data, </span><span style="color:#F97583;">error</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataFromEVMTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    config </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">rollup.Config,</span></span>
<span class="line"><span style="color:#24292E;">    batcherAddr common.Address,</span></span>
<span class="line"><span style="color:#24292E;">    txs types.Transactions,</span></span>
<span class="line"><span style="color:#24292E;">    log log.Logger</span></span>
<span class="line"><span style="color:#24292E;">) ([]eth.Data, </span><span style="color:#D73A49;">error</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>These two functions work together to ensure that the Ethereum fallback mechanism operates correctly, allowing the rollup to continue functioning even during periods of downtime on Celestia.</p><h3 id="testing-the-fallback" tabindex="-1">Testing the fallback <a class="header-anchor" href="#testing-the-fallback" aria-label="Permalink to &quot;Testing the fallback&quot;">​</a></h3><p>Testing out the Ethereum fallback mechanism can be done with the <code>go-da</code> tool. Triggering a simultaneous blob transaction will cause the <code>op-batcher</code> blob transaction to fail, with an <code>incorrect account sequence</code> error, which triggers a fallback to Ethereum.</p><p>To trigger the transaction, send this command from the same <code>go/proto/da</code> directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">grpcurl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-proto</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.proto</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-plaintext</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;blobs&quot;: [{&quot;value&quot;: &quot;SGVsbG8gd28ybGQh&quot;}]}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:26650</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.DAService.Submit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">grpcurl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-proto</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.proto</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-plaintext</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;blobs&quot;: [{&quot;value&quot;: &quot;SGVsbG8gd28ybGQh&quot;}]}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:26650</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.DAService.Submit</span></span></code></pre></div><p>Alternatively, you can shut off the <code>local-celestia-devnet</code> and see that the OP Stack devnet logs show that the rollup has fallen back to the L1, in this case Ethereum, for posting data.</p><h2 id="span-batches" tabindex="-1">Span batches <a class="header-anchor" href="#span-batches" aria-label="Permalink to &quot;Span batches&quot;">​</a></h2><p>Span batches can be enabled by setting <code>OP_BATCHER_BATCH_TYPE: 1</code> in your <code>docker-compose.yml</code> file.</p><p>Note that this requires the Delta activation time to be configured. For your devnet, you should set <code>&quot;l2GenesisDeltaTimeOffset&quot;: &quot;0x0&quot;,</code> in <code>devnetL1-template.json</code>. This will enable span batches and can be tested by grepping <code>docker compose logs -f | grep batch_type</code> which should include <code>batch_type=SpanBatch</code> and <code>batch_type=1</code>.</p>`,63),$o=JSON.parse('{"title":"Run an OP Stack devnet posting Celestia","description":"Start your own devnet with a modified version of optimism-bedrock.","frontmatter":{"description":"Start your own devnet with a modified version of optimism-bedrock.","next":{"text":"Ethereum fallback mechanism","link":"/developers/ethereum-fallback"},"head":[["meta",{"name":"og:title","content":"Run an OP Stack devnet posting Celestia | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/optimism.md","filePath":"developers/optimism.md","lastUpdated":1715286047000}'),Lo={name:"developers/optimism.md"},zo=Object.assign(Lo,{setup(Mo){return(Uo,Ko)=>(t(),p("div",null,[c,s("div",r,[i,s("div",d,[E,s("div",y,[_,h,s("pre",F,[s("code",null,[s("span",u,[s("span",b,"$HOME/.celestia-light-"+l(e(o).mochaChainId)+"/config.toml",1)])])]),s("pre",C,[s("code",null,[s("span",g,[s("span",f,"$HOME/.celestia-light-"+l(e(o).mochaChainId)+"/config.toml",1)])])])]),s("div",T,[v,m,s("pre",A,[s("code",null,[s("span",k,[s("span",B,"$HOME/.celestia-light-"+l(e(o).arabicaChainId)+"/config.toml",1)])])]),s("pre",S,[s("code",null,[s("span",D,[s("span",P,"$HOME/.celestia-light-"+l(e(o).arabicaChainId)+"/config.toml",1)])])])])])]),I,s("div",q,[N,s("div",V,[x,s("div",R,[w,O,s("pre",H,[s("code",null,[s("span",L,[s("span",M,"$HOME/.celestia-light-"+l(e(o).mochaChainId),1)])])]),s("pre",U,[s("code",null,[s("span",K,[s("span",G,"$HOME/.celestia-light-"+l(e(o).mochaChainId),1)])])])]),s("div",W,[$,z,s("pre",Y,[s("code",null,[s("span",X,[s("span",J,"$HOME/.celestia-light-"+l(e(o).arabicaChainId),1)])])]),s("pre",Q,[s("code",null,[s("span",Z,[s("span",j,"$HOME/.celestia-light-"+l(e(o).arabicaChainId),1)])])])])])]),ss,s("div",as,[ns,s("div",os,[s("div",ls,[es,ts,s("pre",ps,[s("code",null,[cs,a(`
`),rs,a(`
`),is,a(`
`),s("span",ds,[Es,ys,_s,s("span",hs,"celestia light start --p2p.network "+l(e(o).mainnetChainId)+" --core.ip rpc.celestia.pops.one --gateway",1)]),a(`
`),Fs,a(`
`),us,a(`
`),bs,a(`
`),Cs,a(`
`),gs,a(`
`),fs,a(`
`),Ts,a(`
`),s("span",vs,[ms,As,ks,s("span",Bs,'"'+l(e(o).mainnetChainId)+'"',1),Ss]),a(`
`),Ds,a(`
`),Ps,a(`
`),Is,a(`
`),qs,a(`
`),Ns,a(`
`),Vs,a(`
`),xs])]),s("pre",Rs,[s("code",null,[ws,a(`
`),Os,a(`
`),Hs,a(`
`),s("span",Ls,[Ms,Us,Ks,s("span",Gs,"celestia light start --p2p.network "+l(e(o).mainnetChainId)+" --core.ip rpc.celestia.pops.one --gateway",1)]),a(`
`),Ws,a(`
`),$s,a(`
`),zs,a(`
`),Ys,a(`
`),Xs,a(`
`),Js,a(`
`),Qs,a(`
`),s("span",Zs,[js,sa,aa,s("span",na,'"'+l(e(o).mainnetChainId)+'"',1),oa]),a(`
`),la,a(`
`),ea,a(`
`),ta,a(`
`),pa,a(`
`),ca,a(`
`),ra,a(`
`),ia])])]),s("div",da,[Ea,ya,s("pre",_a,[s("code",null,[ha,a(`
`),Fa,a(`
`),ua,a(`
`),s("span",ba,[Ca,ga,fa,s("span",Ta,"celestia light start --p2p.network "+l(e(o).mochaChainId)+" --core.ip consensus-full-mocha-4.celestia-mocha.com --gateway",1)]),a(`
`),va,a(`
`),ma,a(`
`),Aa,a(`
`),ka,a(`
`),s("span",Ba,[Sa,s("span",Da,"$HOME/.celestia-light-"+l(e(o).mochaChainId)+"/:/home/celestia/.celestia-light-"+l(e(o).mochaChainId)+"/",1),Pa]),a(`
`),Ia,a(`
`),qa,a(`
`),s("span",Na,[Va,xa,Ra,s("span",wa,'"'+l(e(o).mochaChainId)+'"',1),Oa]),a(`
`),Ha,a(`
`),La,a(`
`),Ma,a(`
`),Ua,a(`
`),Ka,a(`
`),Ga,a(`
`),Wa])]),s("pre",$a,[s("code",null,[za,a(`
`),Ya,a(`
`),Xa,a(`
`),s("span",Ja,[Qa,Za,ja,s("span",sn,"celestia light start --p2p.network "+l(e(o).mochaChainId)+" --core.ip consensus-full-mocha-4.celestia-mocha.com --gateway",1)]),a(`
`),an,a(`
`),nn,a(`
`),on,a(`
`),ln,a(`
`),s("span",en,[tn,s("span",pn,"$HOME/.celestia-light-"+l(e(o).mochaChainId)+"/:/home/celestia/.celestia-light-"+l(e(o).mochaChainId)+"/",1),cn]),a(`
`),rn,a(`
`),dn,a(`
`),s("span",En,[yn,_n,hn,s("span",Fn,'"'+l(e(o).mochaChainId)+'"',1),un]),a(`
`),bn,a(`
`),Cn,a(`
`),gn,a(`
`),fn,a(`
`),Tn,a(`
`),vn,a(`
`),mn])])]),s("div",An,[kn,Bn,s("pre",Sn,[s("code",null,[Dn,a(`
`),Pn,a(`
`),In,a(`
`),s("span",qn,[Nn,Vn,xn,s("span",Rn,"celestia light start --p2p.network "+l(e(o).arabicaChainId)+" --core.ip validator-1.celestia-arabica-11.com --gateway",1)]),a(`
`),wn,a(`
`),On,a(`
`),Hn,a(`
`),Ln,a(`
`),s("span",Mn,[Un,s("span",Kn,"$HOME/.celestia-light-"+l(e(o).arabicaChainId)+"/:/home/celestia/.celestia-light-"+l(e(o).arabicaChainId)+"/",1),Gn]),a(`
`),Wn,a(`
`),$n,a(`
`),s("span",zn,[Yn,Xn,Jn,s("span",Qn,'"'+l(e(o).arabicaChainId)+'"',1),Zn]),a(`
`),jn,a(`
`),so,a(`
`),ao,a(`
`),no,a(`
`),oo,a(`
`),lo,a(`
`),eo])]),s("pre",to,[s("code",null,[po,a(`
`),co,a(`
`),ro,a(`
`),s("span",io,[Eo,yo,_o,s("span",ho,"celestia light start --p2p.network "+l(e(o).arabicaChainId)+" --core.ip validator-1.celestia-arabica-11.com --gateway",1)]),a(`
`),Fo,a(`
`),uo,a(`
`),bo,a(`
`),Co,a(`
`),s("span",go,[fo,s("span",To,"$HOME/.celestia-light-"+l(e(o).arabicaChainId)+"/:/home/celestia/.celestia-light-"+l(e(o).arabicaChainId)+"/",1),vo]),a(`
`),mo,a(`
`),Ao,a(`
`),s("span",ko,[Bo,So,Do,s("span",Po,'"'+l(e(o).arabicaChainId)+'"',1),Io]),a(`
`),qo,a(`
`),No,a(`
`),Vo,a(`
`),xo,a(`
`),Ro,a(`
`),wo,a(`
`),Oo])])])])]),Ho]))}});export{$o as __pageData,zo as default};
