import{c as n}from"./chunks/constants.6b678d01.js";import{o as t,c as p,k as s,a,t as l,l as e,Q as o}from"./chunks/framework.5711f494.js";const c=o("",32),r=s("div",{class:"youtube-wrapper"},[s("iframe",{class:"youtube-video",title:"Arbitrum Nitro Rollup with Celestia as DA, validating blocks with WASM",src:"https://youtube.com/embed/xihXA3wkuLI",allowfullscreen:""})],-1),i=o("",12),d=s("p",null,[a("Change the following in "),s("a",{href:"https://github.com/celestiaorg/nitro-testnode/blob/e4e5acd36890e650c581188ef746a7b02202583a/docker-compose.yaml#L3-L15",target:"_blank",rel:"noreferrer"},[s("code",null,"nitro-testnode/docker-compose.yaml")]),a(":")],-1),E={class:"language-bash vp-adaptive-theme"},y=s("button",{title:"Copy Code",class:"copy"},null,-1),_=s("span",{class:"lang"},"bash",-1),h={class:"shiki github-dark has-diff vp-code-dark"},F=s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"da:")],-1),u=o("",1),C=o("",1),b=o("",1),g=o("",1),f=o("",1),m=o("",1),B=o("",1),T=o("",1),A=o("",1),q=o("",1),v=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#B392F0"}},"environment:"),s("span",{style:{color:"#E1E4E8"}}," ")],-1),S=o("",1),D=o("",1),k=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#B392F0"}},"ports:")],-1),P=o("",1),I=o("",1),x=o("",1),V=s("span",{class:"line diff add"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#B392F0"}},"volumes:"),s("span",{style:{color:"#E1E4E8"}}," ")],-1),N={class:"line diff add"},R=s("span",{style:{color:"#E1E4E8"}},"      ",-1),w=s("span",{style:{color:"#B392F0"}},"-",-1),O=s("span",{style:{color:"#E1E4E8"}}," $HOME",-1),M={style:{color:"#9ECBFF"}},$=s("span",{style:{color:"#E1E4E8"}}," ",-1),H=s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#B392F0"}},"healthcheck:")],-1),L=o("",1),z=o("",1),G=o("",1),U=o("",1),W=o("",1),X={class:"shiki github-light has-diff vp-code-light"},K=s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"da:")],-1),Y=o("",1),j=o("",1),J=o("",1),Q=o("",1),Z=o("",1),ss=o("",1),as=o("",1),os=o("",1),ns=o("",1),ls=o("",1),es=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6F42C1"}},"environment:"),s("span",{style:{color:"#24292E"}}," ")],-1),ts=o("",1),ps=o("",1),cs=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6F42C1"}},"ports:")],-1),rs=o("",1),is=o("",1),ds=o("",1),Es=s("span",{class:"line diff add"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6F42C1"}},"volumes:"),s("span",{style:{color:"#24292E"}}," ")],-1),ys={class:"line diff add"},_s=s("span",{style:{color:"#24292E"}},"      ",-1),hs=s("span",{style:{color:"#6F42C1"}},"-",-1),Fs=s("span",{style:{color:"#24292E"}}," $HOME",-1),us={style:{color:"#032F62"}},Cs=s("span",{style:{color:"#24292E"}}," ",-1),bs=s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6F42C1"}},"healthcheck:")],-1),gs=o("",1),fs=o("",1),ms=o("",1),Bs=o("",1),Ts=o("",1),As=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,[a("It is not advised to run with "),s("code",null,"user: root"),a(" permissions in production.")])],-1),qs=s("p",null,[a("In "),s("a",{href:"https://github.com/celestiaorg/nitro-testnode/blob/e4e5acd36890e650c581188ef746a7b02202583a/test-node.bash#L7-L287",target:"_blank",rel:"noreferrer"},[s("code",null,"nitro-testnode/test-node.bash")]),a(" make the following changes:")],-1),vs={class:"language-bash vp-adaptive-theme"},Ss=s("button",{title:"Copy Code",class:"copy"},null,-1),Ds=s("span",{class:"lang"},"bash",-1),ks={class:"shiki github-dark has-diff vp-code-dark"},Ps=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# Line 7")],-1),Is=o("",1),xs={class:"line diff add"},Vs=s("span",{style:{color:"#E1E4E8"}},"NODE_PATH",-1),Ns=s("span",{style:{color:"#F97583"}},"=",-1),Rs={style:{color:"#9ECBFF"}},ws=s("span",{style:{color:"#E1E4E8"}}," ",-1),Os=s("span",{class:"line"},null,-1),Ms=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# Line 287")],-1),$s=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# NOTE: depending on the version you're using, you may have a different")],-1),Hs=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# container name to start. Change yours accordingly to `celestia-da`.")],-1),Ls=o("",1),zs=o("",1),Gs={class:"shiki github-light has-diff vp-code-light"},Us=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# Line 7")],-1),Ws=o("",1),Xs={class:"line diff add"},Ks=s("span",{style:{color:"#24292E"}},"NODE_PATH",-1),Ys=s("span",{style:{color:"#D73A49"}},"=",-1),js={style:{color:"#032F62"}},Js=s("span",{style:{color:"#24292E"}}," ",-1),Qs=s("span",{class:"line"},null,-1),Zs=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# Line 287")],-1),sa=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# NOTE: depending on the version you're using, you may have a different")],-1),aa=s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"# container name to start. Change yours accordingly to `celestia-da`.")],-1),oa=o("",1),na=o("",1),la=o("",1),ea=o("",9),Ea=JSON.parse('{"title":"Deploy an Arbitrum rollup devnet","description":"A guide on how to install Arbitrum Nitro and deploy an instance on an Ubuntu AMD machine, including the installation of necessary dependencies, cloning the repository, installing Nitro from source, and deploying the rollup to Mocha testnet.","frontmatter":{"description":"A guide on how to install Arbitrum Nitro and deploy an instance on an Ubuntu AMD machine, including the installation of necessary dependencies, cloning the repository, installing Nitro from source, and deploying the rollup to Mocha testnet.","head":[["meta",{"name":"og:title","content":"Deploy an Arbitrum rollup devnet | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/arbitrum-deploy.md","filePath":"developers/arbitrum-deploy.md","lastUpdated":1710966903000}'),ta={name:"developers/arbitrum-deploy.md"},ya=Object.assign(ta,{setup(pa){return(ca,ra)=>(t(),p("div",null,[c,r,i,s("ol",null,[s("li",null,[s("p",null,[a("Fully sync and fund a light node on Mocha testnet using the binary. This will use default node store of "),s("code",null,"$HOME/.celestia-light-"+l(e(n).mochaChainId),1),a(". This is what the docker-compose setup for the testnode will pick up as a node store. If you choose to use another node store, you will need to make changes yourself to reflect this.")])]),s("li",null,[d,s("div",E,[y,_,s("pre",h,[s("code",null,[F,a(`
`),u,a(`
`),C,a(`
`),b,a(`
`),g,a(`
`),f,a(`
`),m,a(`
`),B,a(`
`),T,a(`
`),A,a(`
`),q,a(`
`),v,a(`
`),S,a(`
`),D,a(`
`),k,a(`
`),P,a(`
`),I,a(`
`),x,a(`
`),V,a(`
`),s("span",N,[R,w,O,s("span",M,"/.celestia-light-"+l(e(n).mochaChainId)+"/:/home/celestia/.celestia-light-"+l(e(n).mochaChainId)+"/",1),$]),a(`
`),H,a(`
`),L,a(`
`),z,a(`
`),G,a(`
`),U,a(`
`),W])]),s("pre",X,[s("code",null,[K,a(`
`),Y,a(`
`),j,a(`
`),J,a(`
`),Q,a(`
`),Z,a(`
`),ss,a(`
`),as,a(`
`),os,a(`
`),ns,a(`
`),ls,a(`
`),es,a(`
`),ts,a(`
`),ps,a(`
`),cs,a(`
`),rs,a(`
`),is,a(`
`),ds,a(`
`),Es,a(`
`),s("span",ys,[_s,hs,Fs,s("span",us,"/.celestia-light-"+l(e(n).mochaChainId)+"/:/home/celestia/.celestia-light-"+l(e(n).mochaChainId)+"/",1),Cs]),a(`
`),bs,a(`
`),gs,a(`
`),fs,a(`
`),ms,a(`
`),Bs,a(`
`),Ts])])]),As]),s("li",null,[qs,s("div",vs,[Ss,Ds,s("pre",ks,[s("code",null,[Ps,a(`
`),Is,a(`
`),s("span",xs,[Vs,Ns,s("span",Rs,'"/home/celestia/.celestia-light-'+l(e(n).mochaChainId)+'/"',1),ws]),a(`
`),Os,a(`
`),Ms,a(`
`),$s,a(`
`),Hs,a(`
`),Ls,a(`
`),zs])]),s("pre",Gs,[s("code",null,[Us,a(`
`),Ws,a(`
`),s("span",Xs,[Ks,Ys,s("span",js,'"/home/celestia/.celestia-light-'+l(e(n).mochaChainId)+'/"',1),Js]),a(`
`),Qs,a(`
`),Zs,a(`
`),sa,a(`
`),aa,a(`
`),oa,a(`
`),na])])])]),la]),ea]))}});export{Ea as __pageData,ya as default};
